
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/resources/SDK/module/qgameMoreGame/lieyou_qGamemoreGame_more.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f1ee6PyGIpP+72iCSfcADEK', 'lieyou_qGamemoreGame_more');
// resources/SDK/module/qgameMoreGame/lieyou_qGamemoreGame_more.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    fNode: cc.Node,
    type: 0 //0 more 1 banner 2 side

  },
  onLoad: function onLoad() {
    if (this.type == 2) {
      if (lieyou_moreGame_type == 1 || lieyou_moreGame_type == 2) {// this.loadSprite(cc.find('myNode_side/bg_side/title_side',this.node),'SDK/module/qgameMoreGame/textture_'+lieyou_moreGame_type+'/title_side');
        // this.loadSprite(cc.find('myNode_side/bg_arrow_side',this.node),'SDK/module/qgameMoreGame/textture_'+lieyou_moreGame_type+'/arrow');
      }
    }
  },
  start: function start() {
    var winSize = cc.winSize;
    var winsizeWidth = winSize.height > winSize.width ? winSize.width : winSize.height;

    if (cc.find('myNode', this.node)) {
      cc.find('myNode', this.node).scale = winsizeWidth / 720;
    }

    if (cc.find('bg_2_side', this.node)) {
      cc.find('bg_2_side', this.node).scale = winsizeWidth / 720;
    }

    if (cc.find('myNode_side', this.node)) {
      cc.find('myNode_side', this.node).scale = winsizeWidth / 720;
    }
  },
  closeCallBack: function closeCallBack() {
    this.node.destroy();
  },
  bannerCloseCallBack: function bannerCloseCallBack() {
    this.node.destroy();
    setTimeout(function () {
      var scale = 0.8;

      if (lieyou_SdkManager.sdkWinSize.width > lieyou_SdkManager.sdkWinSize.height) {
        scale = 0.4;
      }

      lieyou_SdkManager.showBannerCustom({
        scale: scale
      });
    }, 100);
  },
  callBackShowSide: function callBackShowSide() {
    cc.find('bg_2_side/red', this.node).active = false;
    var node = cc.find('myNode_side', this.node);
    node.stopAllActions();
    node.runAction(cc.moveTo(0.2, 227 * node.scale, 0));
  },
  callBackHideSide: function callBackHideSide() {
    var node = cc.find('myNode_side', this.node);
    node.stopAllActions();
    node.runAction(cc.moveTo(0.2, 0, 0));
  },
  setData: function setData(obj, isRun, sideType, nodeY) {
    var showNum = obj.length;
    var touchType = 6;

    if (this.type == 1) {
      touchType = 3;
      showNum = lieyou_showMoreGameNum;
    } else if (this.type == 2) {
      touchType = 1;
      showNum = lieyou_showMoreGameNum;
      this.initSide(sideType, nodeY);
    }

    var objLength = obj.length;

    if (this.type == 1 || this.type == 2) {
      for (var i = obj.length; i < showNum; i++) {
        obj.push(obj[i % objLength]);
      }
    }

    if (!isRun) {
      showNum--;
    }

    this._moreGameNode = [];

    for (var _i = 0; _i < obj.length && _i < showNum; _i++) {
      var node = this.iconPrefab();
      this.fNode.addChild(node);
      node.getComponent('lieyou_qGamemoreGame_icon').setData(obj[_i], touchType);

      if (this.type == 1) {
        node.x = 75 + _i * 160;

        if (obj.length >= showNum && isRun) {
          this.myMove(node, cc.v2(-85, 0), cc.v2(75 + (showNum - 1) * 160, 0));
        }
      } else if (this.type == 2) {
        node.y = -80 - _i * 145;

        if (obj.length >= showNum && isRun) {
          this.myMove(node, cc.v2(0, 65), cc.v2(0, -80 - (showNum - 1) * 145));
        }
      }
    }

    if (this._moreGameNode.length > 0) {
      this.schedule(this.refreshMoreGameNodePos, 1 / 60);
    }

    if (!isRun) {
      showNum++;
    }

    if (this.type == 1) {
      this.fNode.width = 160 * (showNum - 1);
    } else if (this.type == 2) {
      this.fNode.height = 145 * (showNum - 1) + 15;
    }
  },
  refreshMoreGameNodePos: function refreshMoreGameNodePos() {
    var type = this.type;
    var deltaX = -1;
    var deltaY = 1;

    for (var i = 0; i < this._moreGameNode.length; i++) {
      var node = this._moreGameNode[i];
      var endPos = node.endPos;
      var begPos = node.begPos;

      if (type == 1) {
        node.x += deltaX;

        if (node.x <= endPos.x) {
          node.x = begPos.x;
        }
      } else {
        node.y += deltaY;

        if (node.y >= endPos.y) {
          node.y = begPos.y;
        }
      }
    }
  },
  myMove: function myMove(node, endPos, begPos) {
    this._moreGameNode.push(node);

    node.endPos = endPos;
    node.begPos = begPos; // var speed = 50;
    // var time = node.getPosition().sub(endPos).mag()/speed;
    // node.runAction(cc.sequence(cc.moveTo(time,endPos),cc.callFunc(()=>{
    //     node.position = begPos;
    //     this.myMove(node,endPos,begPos);
    // })));
  },
  hideDragon: function hideDragon() {
    var _this = this;

    var sideNode = cc.find('bg_2_side', this.node);
    sideNode.stopAllActions();
    sideNode.runAction(cc.sequence(cc.delayTime(5), cc.callFunc(function () {
      sideNode.x = -60 * sideNode.scale;

      if (cc.find('bg_2_side/dragon_1', _this.node).getComponent(dragonBones.ArmatureDisplay)) {
        cc.find('bg_2_side/dragon_1', _this.node).getComponent(dragonBones.ArmatureDisplay).playAnimation('sleep');
      } else if (cc.find('bg_2_side/dragon_2', _this.node).getComponent(dragonBones.ArmatureDisplay)) {
        cc.find('bg_2_side/dragon_2', _this.node).getComponent(dragonBones.ArmatureDisplay).playAnimation('newAnimation_1');
      } else if (cc.find('bg_2_side/dragon', _this.node).getComponent(dragonBones.ArmatureDisplay)) {
        cc.find('bg_2_side/dragon', _this.node).getComponent(dragonBones.ArmatureDisplay).playAnimation('anim_2');
      }
    })));
  },
  initSide: function initSide(sideType, nodeY) {
    sideType = lieyou_Userdefault.getBoolForKey('qgGame_sdk_sdie_is_right', sideType);
    nodeY = lieyou_Userdefault.getIntForKey('qgGame_sdk_sdie_node_posY', nodeY);
    this.setSideIsRigth(sideType);
    var sideNode = cc.find('bg_2_side', this.node);
    this.hideDragon();
    sideNode.y = nodeY;
    sideNode.on(cc.Node.EventType.TOUCH_START, function (event) {
      this.touchBeginPos = event.getLocation();

      if (cc.find('bg_2_side/dragon_1', this.node).getComponent(dragonBones.ArmatureDisplay)) {
        cc.find('bg_2_side/dragon_1', this.node).getComponent(dragonBones.ArmatureDisplay).playAnimation('stand');
      } else if (cc.find('bg_2_side/dragon_2', this.node).getComponent(dragonBones.ArmatureDisplay)) {
        cc.find('bg_2_side/dragon_2', this.node).getComponent(dragonBones.ArmatureDisplay).playAnimation('newAnimation');
      } else if (cc.find('bg_2_side/dragon', this.node).getComponent(dragonBones.ArmatureDisplay)) {
        cc.find('bg_2_side/dragon', this.node).getComponent(dragonBones.ArmatureDisplay).playAnimation('anim_1');
      }

      sideNode.x = 0;
      this.hideDragon();
    }.bind(this));
    sideNode.on(cc.Node.EventType.TOUCH_MOVE, function (event) {
      sideNode.x += event.getDelta().x * this.node.scaleX;
      sideNode.y += event.getDelta().y;
    }.bind(this));
    sideNode.on(cc.Node.EventType.TOUCH_END, this.sideNodeTouchEnd.bind(this));
    sideNode.on(cc.Node.EventType.TOUCH_CANCEL, this.sideNodeTouchEnd.bind(this));
  },
  sideNodeTouchEnd: function sideNodeTouchEnd(event) {
    var sideNode = cc.find('bg_2_side', this.node);
    var winH = cc.winSize.height / 2;
    var winW = cc.winSize.width;

    if (sideNode.y > winH * 0.65) {
      sideNode.y = winH * 0.65;
    } else if (sideNode.y < winH * 0.65 * -1) {
      sideNode.y = winH * 0.65 * -1;
    }

    var sideRight = false;

    if (sideNode.convertToWorldSpaceAR(cc.v2(55, 0)).x > winW / 2) {
      sideRight = true;
    }

    sideNode.x = 0;
    lieyou_Userdefault.setDataForKey('qgGame_sdk_sdie_node_posY', sideNode.y);
    lieyou_Userdefault.setBoolForKey('qgGame_sdk_sdie_is_right', sideRight);
    this.setSideIsRigth(sideRight);

    if (this.touchBeginPos.sub(event.getLocation()).mag() < 10) {
      this.callBackShowSide();
    }
  },
  setSideIsRigth: function setSideIsRigth(sideType) {
    if (sideType) {
      this.node.scaleX = -1;
      this.node.x = cc.winSize.width;
      cc.find('myNode_side/bg_side/title_side', this.node).scaleX = -1;
    } else {
      this.node.scaleX = 1;
      this.node.x = 0;
      cc.find('myNode_side/bg_side/title_side', this.node).scaleX = 1;
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xccmVzb3VyY2VzXFxTREtcXG1vZHVsZVxccWdhbWVNb3JlR2FtZVxcbGlleW91X3FHYW1lbW9yZUdhbWVfbW9yZS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImZOb2RlIiwiTm9kZSIsInR5cGUiLCJvbkxvYWQiLCJsaWV5b3VfbW9yZUdhbWVfdHlwZSIsInN0YXJ0Iiwid2luU2l6ZSIsIndpbnNpemVXaWR0aCIsImhlaWdodCIsIndpZHRoIiwiZmluZCIsIm5vZGUiLCJzY2FsZSIsImNsb3NlQ2FsbEJhY2siLCJkZXN0cm95IiwiYmFubmVyQ2xvc2VDYWxsQmFjayIsInNldFRpbWVvdXQiLCJsaWV5b3VfU2RrTWFuYWdlciIsInNka1dpblNpemUiLCJzaG93QmFubmVyQ3VzdG9tIiwiY2FsbEJhY2tTaG93U2lkZSIsImFjdGl2ZSIsInN0b3BBbGxBY3Rpb25zIiwicnVuQWN0aW9uIiwibW92ZVRvIiwiY2FsbEJhY2tIaWRlU2lkZSIsInNldERhdGEiLCJvYmoiLCJpc1J1biIsInNpZGVUeXBlIiwibm9kZVkiLCJzaG93TnVtIiwibGVuZ3RoIiwidG91Y2hUeXBlIiwibGlleW91X3Nob3dNb3JlR2FtZU51bSIsImluaXRTaWRlIiwib2JqTGVuZ3RoIiwiaSIsInB1c2giLCJfbW9yZUdhbWVOb2RlIiwiaWNvblByZWZhYiIsImFkZENoaWxkIiwiZ2V0Q29tcG9uZW50IiwieCIsIm15TW92ZSIsInYyIiwieSIsInNjaGVkdWxlIiwicmVmcmVzaE1vcmVHYW1lTm9kZVBvcyIsImRlbHRhWCIsImRlbHRhWSIsImVuZFBvcyIsImJlZ1BvcyIsImhpZGVEcmFnb24iLCJzaWRlTm9kZSIsInNlcXVlbmNlIiwiZGVsYXlUaW1lIiwiY2FsbEZ1bmMiLCJkcmFnb25Cb25lcyIsIkFybWF0dXJlRGlzcGxheSIsInBsYXlBbmltYXRpb24iLCJsaWV5b3VfVXNlcmRlZmF1bHQiLCJnZXRCb29sRm9yS2V5IiwiZ2V0SW50Rm9yS2V5Iiwic2V0U2lkZUlzUmlndGgiLCJvbiIsIkV2ZW50VHlwZSIsIlRPVUNIX1NUQVJUIiwiZXZlbnQiLCJ0b3VjaEJlZ2luUG9zIiwiZ2V0TG9jYXRpb24iLCJiaW5kIiwiVE9VQ0hfTU9WRSIsImdldERlbHRhIiwic2NhbGVYIiwiVE9VQ0hfRU5EIiwic2lkZU5vZGVUb3VjaEVuZCIsIlRPVUNIX0NBTkNFTCIsIndpbkgiLCJ3aW5XIiwic2lkZVJpZ2h0IiwiY29udmVydFRvV29ybGRTcGFjZUFSIiwic2V0RGF0YUZvcktleSIsInNldEJvb2xGb3JLZXkiLCJzdWIiLCJtYWciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUVKLEVBQUUsQ0FBQ0ssSUFERjtBQUVSQyxJQUFBQSxJQUFJLEVBQUMsQ0FGRyxDQUVEOztBQUZDLEdBSFA7QUFPTEMsRUFBQUEsTUFQSyxvQkFPSztBQUVOLFFBQUcsS0FBS0QsSUFBTCxJQUFhLENBQWhCLEVBQWtCO0FBQ2QsVUFBR0Usb0JBQW9CLElBQUksQ0FBeEIsSUFBNkJBLG9CQUFvQixJQUFJLENBQXhELEVBQTBELENBQ3REO0FBQ0E7QUFDSDtBQUNKO0FBQ0osR0FmSTtBQWlCTEMsRUFBQUEsS0FqQkssbUJBaUJJO0FBQ0wsUUFBSUMsT0FBTyxHQUFHVixFQUFFLENBQUNVLE9BQWpCO0FBQ0EsUUFBSUMsWUFBWSxHQUFHRCxPQUFPLENBQUNFLE1BQVIsR0FBZUYsT0FBTyxDQUFDRyxLQUF2QixHQUE2QkgsT0FBTyxDQUFDRyxLQUFyQyxHQUEyQ0gsT0FBTyxDQUFDRSxNQUF0RTs7QUFDQSxRQUFHWixFQUFFLENBQUNjLElBQUgsQ0FBUSxRQUFSLEVBQWlCLEtBQUtDLElBQXRCLENBQUgsRUFBK0I7QUFDM0JmLE1BQUFBLEVBQUUsQ0FBQ2MsSUFBSCxDQUFRLFFBQVIs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XG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBmTm9kZTogY2MuTm9kZSxcclxuICAgICAgICB0eXBlOjAsLy8wIG1vcmUgMSBiYW5uZXIgMiBzaWRlXHJcbiAgICB9LFxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICBcclxuICAgICAgICBpZih0aGlzLnR5cGUgPT0gMil7XHJcbiAgICAgICAgICAgIGlmKGxpZXlvdV9tb3JlR2FtZV90eXBlID09IDEgfHwgbGlleW91X21vcmVHYW1lX3R5cGUgPT0gMil7XHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzLmxvYWRTcHJpdGUoY2MuZmluZCgnbXlOb2RlX3NpZGUvYmdfc2lkZS90aXRsZV9zaWRlJyx0aGlzLm5vZGUpLCdTREsvbW9kdWxlL3FnYW1lTW9yZUdhbWUvdGV4dHR1cmVfJytsaWV5b3VfbW9yZUdhbWVfdHlwZSsnL3RpdGxlX3NpZGUnKTtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMubG9hZFNwcml0ZShjYy5maW5kKCdteU5vZGVfc2lkZS9iZ19hcnJvd19zaWRlJyx0aGlzLm5vZGUpLCdTREsvbW9kdWxlL3FnYW1lTW9yZUdhbWUvdGV4dHR1cmVfJytsaWV5b3VfbW9yZUdhbWVfdHlwZSsnL2Fycm93Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgdmFyIHdpblNpemUgPSBjYy53aW5TaXplO1xyXG4gICAgICAgIHZhciB3aW5zaXplV2lkdGggPSB3aW5TaXplLmhlaWdodD53aW5TaXplLndpZHRoP3dpblNpemUud2lkdGg6d2luU2l6ZS5oZWlnaHQ7XHJcbiAgICAgICAgaWYoY2MuZmluZCgnbXlOb2RlJyx0aGlzLm5vZGUpKXtcclxuICAgICAgICAgICAgY2MuZmluZCgnbXlOb2RlJyx0aGlzLm5vZGUpLnNjYWxlID0gd2luc2l6ZVdpZHRoLzcyMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoY2MuZmluZCgnYmdfMl9zaWRlJyx0aGlzLm5vZGUpKXtcclxuICAgICAgICAgICAgY2MuZmluZCgnYmdfMl9zaWRlJyx0aGlzLm5vZGUpLnNjYWxlID0gd2luc2l6ZVdpZHRoLzcyMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoY2MuZmluZCgnbXlOb2RlX3NpZGUnLHRoaXMubm9kZSkpe1xyXG4gICAgICAgICAgICBjYy5maW5kKCdteU5vZGVfc2lkZScsdGhpcy5ub2RlKS5zY2FsZSA9IHdpbnNpemVXaWR0aC83MjA7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNsb3NlQ2FsbEJhY2soKXtcclxuICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpO1xyXG4gICAgfSxcclxuICAgIGJhbm5lckNsb3NlQ2FsbEJhY2soKXtcclxuICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB2YXIgc2NhbGUgPSAwLjg7XHJcbiAgICAgICAgICAgIGlmKGxpZXlvdV9TZGtNYW5hZ2VyLnNka1dpblNpemUud2lkdGggPiBsaWV5b3VfU2RrTWFuYWdlci5zZGtXaW5TaXplLmhlaWdodCl7XHJcbiAgICAgICAgICAgICAgICBzY2FsZSA9IDAuNDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaWV5b3VfU2RrTWFuYWdlci5zaG93QmFubmVyQ3VzdG9tKHtzY2FsZTpzY2FsZX0pO1xyXG4gICAgICAgIH0sIDEwMCk7XHJcbiAgICB9LFxyXG4gICAgY2FsbEJhY2tTaG93U2lkZSgpe1xyXG4gICAgICAgIGNjLmZpbmQoJ2JnXzJfc2lkZS9yZWQnLHRoaXMubm9kZSkuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIG5vZGUgPSBjYy5maW5kKCdteU5vZGVfc2lkZScsdGhpcy5ub2RlKTtcclxuICAgICAgICBub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgbm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKDAuMiwyMjcqbm9kZS5zY2FsZSwwKSk7XHJcbiAgICB9LFxyXG4gICAgY2FsbEJhY2tIaWRlU2lkZSgpe1xyXG4gICAgICAgIHZhciBub2RlID0gY2MuZmluZCgnbXlOb2RlX3NpZGUnLHRoaXMubm9kZSk7XHJcbiAgICAgICAgbm9kZS5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgIG5vZGUucnVuQWN0aW9uKGNjLm1vdmVUbygwLjIsMCwwKSk7XHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBzZXREYXRhKG9iaixpc1J1bixzaWRlVHlwZSxub2RlWSl7XHJcbiAgICAgICAgdmFyIHNob3dOdW0gPSBvYmoubGVuZ3RoO1xyXG4gICAgICAgIHZhciB0b3VjaFR5cGUgPSA2O1xyXG4gICAgICAgIGlmKHRoaXMudHlwZSA9PSAxKXtcclxuICAgICAgICAgICAgdG91Y2hUeXBlID0gMztcclxuICAgICAgICAgICAgc2hvd051bSA9IGxpZXlvdV9zaG93TW9yZUdhbWVOdW07XHJcbiAgICAgICAgfWVsc2UgaWYodGhpcy50eXBlID09IDIpe1xyXG4gICAgICAgICAgICB0b3VjaFR5cGUgPSAxO1xyXG4gICAgICAgICAgICBzaG93TnVtID0gbGlleW91X3Nob3dNb3JlR2FtZU51bTtcclxuICAgICAgICAgICAgdGhpcy5pbml0U2lkZShzaWRlVHlwZSxub2RlWSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBvYmpMZW5ndGggPSBvYmoubGVuZ3RoO1xyXG4gICAgICAgIGlmKHRoaXMudHlwZSA9PSAxIHx8IHRoaXMudHlwZSA9PSAyKXtcclxuICAgICAgICAgICAgZm9yKHZhciBpID0gb2JqLmxlbmd0aDtpIDwgc2hvd051bTtpKyspe1xyXG4gICAgICAgICAgICAgICAgb2JqLnB1c2gob2JqW2klb2JqTGVuZ3RoXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIWlzUnVuKXtcclxuICAgICAgICAgICAgc2hvd051bS0tO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9tb3JlR2FtZU5vZGUgPSBbXTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwO2kgPCBvYmoubGVuZ3RoICYmIGkgPCBzaG93TnVtO2krKyl7XHJcbiAgICAgICAgICAgIHZhciBub2RlID0gdGhpcy5pY29uUHJlZmFiKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZk5vZGUuYWRkQ2hpbGQobm9kZSk7XHJcbiAgICAgICAgICAgIG5vZGUuZ2V0Q29tcG9uZW50KCdsaWV5b3VfcUdhbWVtb3JlR2FtZV9pY29uJykuc2V0RGF0YShvYmpbaV0sdG91Y2hUeXBlKTtcclxuICAgICAgICAgICAgaWYodGhpcy50eXBlID09IDEpe1xyXG4gICAgICAgICAgICAgICAgbm9kZS54ID0gNzUgKyBpKjE2MDtcclxuICAgICAgICAgICAgICAgIGlmKG9iai5sZW5ndGggPj0gc2hvd051bSAmJiBpc1J1bil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5teU1vdmUobm9kZSxjYy52MigtODUsMCksY2MudjIoNzUgKyAoc2hvd051bS0xKSoxNjAsMCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ZWxzZSBpZih0aGlzLnR5cGUgPT0gMil7XHJcbiAgICAgICAgICAgICAgICBub2RlLnkgPSAtODAgLSBpKjE0NTtcclxuICAgICAgICAgICAgICAgIGlmKG9iai5sZW5ndGggPj0gc2hvd051bSAmJiBpc1J1bil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5teU1vdmUobm9kZSxjYy52MigwLDY1KSxjYy52MigwLC04MCAtIChzaG93TnVtLTEpKjE0NSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMuX21vcmVHYW1lTm9kZS5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgdGhpcy5zY2hlZHVsZSh0aGlzLnJlZnJlc2hNb3JlR2FtZU5vZGVQb3MsMS82MCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCFpc1J1bil7XHJcbiAgICAgICAgICAgIHNob3dOdW0rKztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy50eXBlID09IDEpe1xyXG4gICAgICAgICAgICB0aGlzLmZOb2RlLndpZHRoID0gMTYwICogKHNob3dOdW0tMSk7XHJcbiAgICAgICAgfWVsc2UgaWYodGhpcy50eXBlID09IDIpe1xyXG4gICAgICAgICAgICB0aGlzLmZOb2RlLmhlaWdodCA9IDE0NSAqIChzaG93TnVtLTEpICsgMTU7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHJlZnJlc2hNb3JlR2FtZU5vZGVQb3MoKXtcclxuICAgICAgICBsZXQgdHlwZSA9IHRoaXMudHlwZTtcclxuICAgICAgICBsZXQgZGVsdGFYID0gLTE7XHJcbiAgICAgICAgbGV0IGRlbHRhWSA9IDE7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDtpPHRoaXMuX21vcmVHYW1lTm9kZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLl9tb3JlR2FtZU5vZGVbaV07XHJcbiAgICAgICAgICAgIGxldCBlbmRQb3MgPSBub2RlLmVuZFBvcztcclxuICAgICAgICAgICAgbGV0IGJlZ1BvcyA9IG5vZGUuYmVnUG9zO1xyXG4gICAgICAgICAgICBpZih0eXBlID09IDEpe1xyXG4gICAgICAgICAgICAgICAgbm9kZS54ICs9IGRlbHRhWDtcclxuICAgICAgICAgICAgICAgIGlmKG5vZGUueCA8PSBlbmRQb3MueCl7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZS54ID0gYmVnUG9zLng7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgbm9kZS55ICs9IGRlbHRhWTtcclxuICAgICAgICAgICAgICAgIGlmKG5vZGUueSA+PSBlbmRQb3MueSl7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZS55ID0gYmVnUG9zLnk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbXlNb3ZlKG5vZGUsZW5kUG9zLGJlZ1Bvcyl7XHJcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVOb2RlLnB1c2gobm9kZSk7XHJcbiAgICAgICAgbm9kZS5lbmRQb3MgPSBlbmRQb3M7XHJcbiAgICAgICAgbm9kZS5iZWdQb3MgPSBiZWdQb3M7XHJcbiAgICAgICAgLy8gdmFyIHNwZWVkID0gNTA7XHJcbiAgICAgICAgLy8gdmFyIHRpbWUgPSBub2RlLmdldFBvc2l0aW9uKCkuc3ViKGVuZFBvcykubWFnKCkvc3BlZWQ7XHJcbiAgICAgICAgLy8gbm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZVRvKHRpbWUsZW5kUG9zKSxjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgIC8vICAgICBub2RlLnBvc2l0aW9uID0gYmVnUG9zO1xyXG4gICAgICAgIC8vICAgICB0aGlzLm15TW92ZShub2RlLGVuZFBvcyxiZWdQb3MpO1xyXG4gICAgICAgIC8vIH0pKSk7XHJcbiAgICB9LFxyXG4gICAgaGlkZURyYWdvbigpe1xyXG4gICAgICAgIHZhciBzaWRlTm9kZSA9IGNjLmZpbmQoJ2JnXzJfc2lkZScsdGhpcy5ub2RlKTtcclxuICAgICAgICBzaWRlTm9kZS5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgIHNpZGVOb2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5kZWxheVRpbWUoNSksY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgc2lkZU5vZGUueCA9IC02MCAqIHNpZGVOb2RlLnNjYWxlO1xyXG4gICAgICAgICAgICBpZihjYy5maW5kKCdiZ18yX3NpZGUvZHJhZ29uXzEnLHRoaXMubm9kZSkuZ2V0Q29tcG9uZW50KGRyYWdvbkJvbmVzLkFybWF0dXJlRGlzcGxheSkpe1xyXG4gICAgICAgICAgICAgICAgY2MuZmluZCgnYmdfMl9zaWRlL2RyYWdvbl8xJyx0aGlzLm5vZGUpLmdldENvbXBvbmVudChkcmFnb25Cb25lcy5Bcm1hdHVyZURpc3BsYXkpLnBsYXlBbmltYXRpb24oJ3NsZWVwJyk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGNjLmZpbmQoJ2JnXzJfc2lkZS9kcmFnb25fMicsdGhpcy5ub2RlKS5nZXRDb21wb25lbnQoZHJhZ29uQm9uZXMuQXJtYXR1cmVEaXNwbGF5KSl7XHJcbiAgICAgICAgICAgICAgICBjYy5maW5kKCdiZ18yX3NpZGUvZHJhZ29uXzInLHRoaXMubm9kZSkuZ2V0Q29tcG9uZW50KGRyYWdvbkJvbmVzLkFybWF0dXJlRGlzcGxheSkucGxheUFuaW1hdGlvbignbmV3QW5pbWF0aW9uXzEnKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoY2MuZmluZCgnYmdfMl9zaWRlL2RyYWdvbicsdGhpcy5ub2RlKS5nZXRDb21wb25lbnQoZHJhZ29uQm9uZXMuQXJtYXR1cmVEaXNwbGF5KSl7XHJcbiAgICAgICAgICAgICAgICBjYy5maW5kKCdiZ18yX3NpZGUvZHJhZ29uJyx0aGlzLm5vZGUpLmdldENvbXBvbmVudChkcmFnb25Cb25lcy5Bcm1hdHVyZURpc3BsYXkpLnBsYXlBbmltYXRpb24oJ2FuaW1fMicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkpKTtcclxuICAgIH0sXHJcbiAgICBpbml0U2lkZShzaWRlVHlwZSxub2RlWSl7XHJcbiAgICAgICAgc2lkZVR5cGUgPSBsaWV5b3VfVXNlcmRlZmF1bHQuZ2V0Qm9vbEZvcktleSgncWdHYW1lX3Nka19zZGllX2lzX3JpZ2h0JyxzaWRlVHlwZSk7XHJcbiAgICAgICAgbm9kZVkgPSBsaWV5b3VfVXNlcmRlZmF1bHQuZ2V0SW50Rm9yS2V5KCdxZ0dhbWVfc2RrX3NkaWVfbm9kZV9wb3NZJyxub2RlWSk7XHJcbiAgICAgICAgdGhpcy5zZXRTaWRlSXNSaWd0aChzaWRlVHlwZSk7XHJcbiAgICAgICAgdmFyIHNpZGVOb2RlID0gY2MuZmluZCgnYmdfMl9zaWRlJyx0aGlzLm5vZGUpO1xyXG4gICAgICAgIHRoaXMuaGlkZURyYWdvbigpO1xyXG4gICAgICAgIHNpZGVOb2RlLnkgPSBub2RlWTtcclxuXHJcbiAgICAgICAgc2lkZU5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsZnVuY3Rpb24oZXZlbnQpe1xyXG4gICAgICAgICAgICB0aGlzLnRvdWNoQmVnaW5Qb3MgPSBldmVudC5nZXRMb2NhdGlvbigpO1xyXG4gICAgICAgICAgICBpZihjYy5maW5kKCdiZ18yX3NpZGUvZHJhZ29uXzEnLHRoaXMubm9kZSkuZ2V0Q29tcG9uZW50KGRyYWdvbkJvbmVzLkFybWF0dXJlRGlzcGxheSkpe1xyXG4gICAgICAgICAgICAgICAgY2MuZmluZCgnYmdfMl9zaWRlL2RyYWdvbl8xJyx0aGlzLm5vZGUpLmdldENvbXBvbmVudChkcmFnb25Cb25lcy5Bcm1hdHVyZURpc3BsYXkpLnBsYXlBbmltYXRpb24oJ3N0YW5kJyk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGNjLmZpbmQoJ2JnXzJfc2lkZS9kcmFnb25fMicsdGhpcy5ub2RlKS5nZXRDb21wb25lbnQoZHJhZ29uQm9uZXMuQXJtYXR1cmVEaXNwbGF5KSl7XHJcbiAgICAgICAgICAgICAgICBjYy5maW5kKCdiZ18yX3NpZGUvZHJhZ29uXzInLHRoaXMubm9kZSkuZ2V0Q29tcG9uZW50KGRyYWdvbkJvbmVzLkFybWF0dXJlRGlzcGxheSkucGxheUFuaW1hdGlvbignbmV3QW5pbWF0aW9uJyk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGNjLmZpbmQoJ2JnXzJfc2lkZS9kcmFnb24nLHRoaXMubm9kZSkuZ2V0Q29tcG9uZW50KGRyYWdvbkJvbmVzLkFybWF0dXJlRGlzcGxheSkpe1xyXG4gICAgICAgICAgICAgICAgY2MuZmluZCgnYmdfMl9zaWRlL2RyYWdvbicsdGhpcy5ub2RlKS5nZXRDb21wb25lbnQoZHJhZ29uQm9uZXMuQXJtYXR1cmVEaXNwbGF5KS5wbGF5QW5pbWF0aW9uKCdhbmltXzEnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgc2lkZU5vZGUueCA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuaGlkZURyYWdvbigpO1xyXG4gICAgICAgIH0uYmluZCh0aGlzKSk7XHJcbiAgICAgICAgc2lkZU5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSxmdW5jdGlvbihldmVudCl7XHJcbiAgICAgICAgICAgIHNpZGVOb2RlLnggKz0gZXZlbnQuZ2V0RGVsdGEoKS54ICogdGhpcy5ub2RlLnNjYWxlWDtcclxuICAgICAgICAgICAgc2lkZU5vZGUueSArPSBldmVudC5nZXREZWx0YSgpLnk7XHJcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcclxuICAgICAgICBzaWRlTm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsdGhpcy5zaWRlTm9kZVRvdWNoRW5kLmJpbmQodGhpcykpO1xyXG4gICAgICAgIHNpZGVOb2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0NBTkNFTCx0aGlzLnNpZGVOb2RlVG91Y2hFbmQuYmluZCh0aGlzKSk7XHJcbiAgICB9LFxyXG5cclxuICAgIHNpZGVOb2RlVG91Y2hFbmQoZXZlbnQpe1xyXG4gICAgICAgIHZhciBzaWRlTm9kZSA9IGNjLmZpbmQoJ2JnXzJfc2lkZScsdGhpcy5ub2RlKTtcclxuICAgICAgICB2YXIgd2luSCA9IGNjLndpblNpemUuaGVpZ2h0LzI7XHJcbiAgICAgICAgdmFyIHdpblcgPSBjYy53aW5TaXplLndpZHRoO1xyXG4gICAgICAgIGlmKHNpZGVOb2RlLnkgPiB3aW5IKjAuNjUpe1xyXG4gICAgICAgICAgICBzaWRlTm9kZS55ID0gd2luSCowLjY1O1xyXG4gICAgICAgIH1lbHNlIGlmKHNpZGVOb2RlLnkgPCB3aW5IKjAuNjUqLTEpe1xyXG4gICAgICAgICAgICBzaWRlTm9kZS55ID0gd2luSCowLjY1Ki0xO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB2YXIgc2lkZVJpZ2h0ID0gZmFsc2U7XHJcbiAgICAgICAgaWYoc2lkZU5vZGUuY29udmVydFRvV29ybGRTcGFjZUFSKGNjLnYyKDU1LDApKS54ID4gd2luVy8yKXtcclxuICAgICAgICAgICAgc2lkZVJpZ2h0ID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgc2lkZU5vZGUueCA9IDA7XHJcbiAgICAgICAgbGlleW91X1VzZXJkZWZhdWx0LnNldERhdGFGb3JLZXkoJ3FnR2FtZV9zZGtfc2RpZV9ub2RlX3Bvc1knLHNpZGVOb2RlLnkpO1xyXG4gICAgICAgIGxpZXlvdV9Vc2VyZGVmYXVsdC5zZXRCb29sRm9yS2V5KCdxZ0dhbWVfc2RrX3NkaWVfaXNfcmlnaHQnLHNpZGVSaWdodCk7XHJcbiAgICAgICAgdGhpcy5zZXRTaWRlSXNSaWd0aChzaWRlUmlnaHQpO1xyXG4gICAgICAgIGlmKHRoaXMudG91Y2hCZWdpblBvcy5zdWIoZXZlbnQuZ2V0TG9jYXRpb24oKSkubWFnKCkgPCAxMCl7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbEJhY2tTaG93U2lkZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgc2V0U2lkZUlzUmlndGgoc2lkZVR5cGUpe1xyXG4gICAgICAgIGlmKHNpZGVUeXBlKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnNjYWxlWCA9IC0xO1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUueCA9IGNjLndpblNpemUud2lkdGg7XHJcbiAgICAgICAgICAgIGNjLmZpbmQoJ215Tm9kZV9zaWRlL2JnX3NpZGUvdGl0bGVfc2lkZScsdGhpcy5ub2RlKS5zY2FsZVggPSAtMTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnNjYWxlWCA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS54ID0gMDtcclxuICAgICAgICAgICAgY2MuZmluZCgnbXlOb2RlX3NpZGUvYmdfc2lkZS90aXRsZV9zaWRlJyx0aGlzLm5vZGUpLnNjYWxlWCA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==