
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/Ui/UiResurrection.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1f673Tw+0pKFpl5wjJLEuWB', 'UiResurrection');
// script/Ui/UiResurrection.ts

Object.defineProperty(exports, "__esModule", { value: true });
var UIPage_1 = require("./UIPage");
var Constant_1 = require("../Framework/Constant");
var CocosZ_1 = require("../Framework/CocosZ");
var Msg_1 = require("../Framework/Msg");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UiResurrection = /** @class */ (function (_super) {
    __extends(UiResurrection, _super);
    function UiResurrection() {
        var _this = _super.call(this) || this;
        _this._ScaleNode = null;
        _this._BtnResurrection = null;
        _this._Ske = null;
        _this._BtnCannel = null;
        _this._Circle4 = null;
        _this._Circle3 = null;
        _this._Circle2 = null;
        _this._DelayTimeLable = null;
        _this._ResurrectionDelayTime = 5;
        _this._ActionList = [];
        _this._init();
        return _this;
    }
    UiResurrection.prototype._init = function () {
        var Game = CocosZ_1.cocosz.resMgr.getRes(Constant_1.PanelName.UiResurrection, cc.Prefab);
        if (Game) {
            var node = cc.instantiate(Game);
            if (node) {
                this._page = node;
                cc.find("Canvas/ui").addChild(node);
                node.active = true;
                node.position = cc.Vec2.ZERO;
                this._onLoad();
            }
        }
    };
    UiResurrection.prototype._onLoad = function () {
        this._ScaleNode = this._page.getChildByName("ScaleNode");
        this._BtnResurrection = this._ScaleNode.getChildByName("BtnResurrection");
        this._BtnCannel = this._ScaleNode.getChildByName("BtnCannel");
        this._Circle4 = this._ScaleNode.getChildByName("Time").getChildByName("circle_4").getComponent(cc.Sprite);
        this._Circle3 = this._ScaleNode.getChildByName("Time").getChildByName("circle_3").getComponent(cc.Sprite);
        this._Circle2 = this._ScaleNode.getChildByName("Time").getChildByName("circle_2").getComponent(cc.Sprite);
        this._DelayTimeLable = this._ScaleNode.getChildByName("Time").getChildByName("num").getComponent(cc.Label);
        this._Start();
    };
    UiResurrection.prototype._Start = function () {
        var _this = this;
        this._BtnResurrection.on(cc.Node.EventType.TOUCH_START, function () {
            _this.onBtnResurrection();
        });
        this._BtnCannel.on(cc.Node.EventType.TOUCH_START, function () {
            _this.onBtnCannel();
        });
    };
    UiResurrection.prototype.onBtnResurrection = function () {
        cc.log("00-------------");
        CocosZ_1.cocosz.audioMgr.playbtnEffect();
        Msg_1.default.Show("视频播放失败!");
    };
    UiResurrection.prototype.onBtnCannel = function () {
        cc.log("00-------222------");
        for (var _i = 0, _a = this._ActionList; _i < _a.length; _i++) {
            var action = _a[_i];
            if (action) {
                action.stop();
            }
        }
        CocosZ_1.cocosz.unscheduleAllCallbacks();
        CocosZ_1.cocosz.audioMgr.playbtnEffect();
        CocosZ_1.cocosz.uiMgr.openPanel(Constant_1.PanelName.UiFailed);
        cc.game.emit(Constant_1.default.E_UPDATE_COIN);
        this._page.destroy();
    };
    UiResurrection.prototype.onOpen = function () {
        var _this = this;
        CocosZ_1.cocosz.schedule(function () {
            if (Math.ceil(Math.abs(_this._Circle2.fillRange * 5 + 5)) > 0) {
                _this._DelayTimeLable.string = Math.ceil(Math.abs(_this._Circle2.fillRange * 5 + 5)).toString();
            }
        }, 0.01);
        var action1 = cc.tween(this._Circle2)
            .to(5, { fillRange: -1 })
            .call(function () {
            _this.onBtnCannel();
        })
            .start();
        var action2 = cc.tween(this._ScaleNode.getChildByName("Bg").getChildByName("DelayBox"))
            .to(1, { opacity: 0 })
            .to(1, { opacity: 255 })
            .to(1, { opacity: 0 })
            .to(1, { opacity: 255 })
            .to(1, { opacity: 0 })
            .start();
        var height = this._Circle3.node.height;
        var width = this._Circle3.node.width;
        var action3 = cc.tween(this._Circle3.node)
            .call(function () {
            _this._Circle3.node.height = _this._Circle2.node.height;
            _this._Circle3.node.width = _this._Circle2.node.width;
            _this._Circle3.node.opacity = 255;
        })
            .to(0.75, { height: height + 150, width: width + 150, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle3.node.height = _this._Circle2.node.height;
            _this._Circle3.node.width = _this._Circle2.node.width;
            _this._Circle3.node.opacity = 255;
        })
            .to(0.75, { height: height + 150, width: width + 150, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle3.node.height = _this._Circle2.node.height;
            _this._Circle3.node.width = _this._Circle2.node.width;
            _this._Circle3.node.opacity = 255;
        })
            .to(0.75, { height: height + 150, width: width + 150, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle3.node.height = _this._Circle2.node.height;
            _this._Circle3.node.width = _this._Circle2.node.width;
            _this._Circle3.node.opacity = 255;
        })
            .to(0.75, { height: height + 150, width: width + 150, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle3.node.height = _this._Circle2.node.height;
            _this._Circle3.node.width = _this._Circle2.node.width;
            _this._Circle3.node.opacity = 255;
        })
            .to(0.75, { height: height + 150, width: width + 150, opacity: 0 })
            .delay(0.25)
            .start();
        height = this._Circle4.node.height;
        width = this._Circle4.node.width;
        var action4 = cc.tween(this._Circle4.node)
            .call(function () {
            _this._Circle4.node.height = _this._Circle2.node.height;
            _this._Circle4.node.width = _this._Circle2.node.width;
            _this._Circle4.node.opacity = 255;
        })
            .to(0.75, { height: height + 75, width: width + 75, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle4.node.height = _this._Circle2.node.height;
            _this._Circle4.node.width = _this._Circle2.node.width;
            _this._Circle4.node.opacity = 255;
        })
            .to(0.75, { height: height + 75, width: width + 75, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle4.node.height = _this._Circle2.node.height;
            _this._Circle4.node.width = _this._Circle2.node.width;
            _this._Circle4.node.opacity = 255;
        })
            .to(0.75, { height: height + 75, width: width + 75, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle4.node.height = _this._Circle2.node.height;
            _this._Circle4.node.width = _this._Circle2.node.width;
            _this._Circle4.node.opacity = 255;
        })
            .to(0.75, { height: height + 75, width: width + 75, opacity: 0 })
            .delay(0.25)
            .call(function () {
            _this._Circle4.node.height = _this._Circle2.node.height;
            _this._Circle4.node.width = _this._Circle2.node.width;
            _this._Circle4.node.opacity = 255;
        })
            .to(0.75, { height: height + 75, width: width + 75, opacity: 0 })
            .delay(0.25)
            .start();
        this._ActionList.push(action1);
        this._ActionList.push(action2);
        this._ActionList.push(action3);
        this._ActionList.push(action4);
    };
    UiResurrection.prototype.onClose = function () {
        CocosZ_1.cocosz.unscheduleAllCallbacks();
        cc.game.targetOff(this);
    };
    UiResurrection.prototype.onDestroy = function () {
        CocosZ_1.cocosz.unscheduleAllCallbacks();
        cc.game.targetOff(this);
    };
    UiResurrection = __decorate([
        ccclass
    ], UiResurrection);
    return UiResurrection;
}(UIPage_1.default));
exports.default = UiResurrection;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0XFxVaVxcVWlSZXN1cnJlY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG1DQUE4QjtBQUM5QixrREFBNEQ7QUFDNUQsOENBQTZDO0FBQzdDLHdDQUFtQztBQUU3QixJQUFBLGtCQUFxQyxFQUFuQyxvQkFBTyxFQUFFLHNCQUEwQixDQUFDO0FBRzVDO0lBQTRDLGtDQUFNO0lBYTlDO1FBQUEsWUFDSSxpQkFBTyxTQUVWO1FBZE8sZ0JBQVUsR0FBWSxJQUFJLENBQUM7UUFDM0Isc0JBQWdCLEdBQVksSUFBSSxDQUFDO1FBQ2pDLFVBQUksR0FBZ0MsSUFBSSxDQUFDO1FBQ3pDLGdCQUFVLEdBQVksSUFBSSxDQUFDO1FBQzNCLGNBQVEsR0FBYyxJQUFJLENBQUM7UUFDM0IsY0FBUSxHQUFjLElBQUksQ0FBQztRQUMzQixjQUFRLEdBQWMsSUFBSSxDQUFDO1FBQzNCLHFCQUFlLEdBQWEsSUFBSSxDQUFDO1FBQ2pDLDRCQUFzQixHQUFXLENBQUMsQ0FBQztRQUNuQyxpQkFBVyxHQUFRLEVBQUUsQ0FBQztRQUkxQixLQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7O0lBQ2pCLENBQUM7SUFFTyw4QkFBSyxHQUFiO1FBQ0ksSUFBSSxJQUFJLEdBQWMsZUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsb0JBQVMsQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hGLElBQUksSUFBSSxFQUFFO1lBQ04sSUFBSSxJQUFJLEdBQVksRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLElBQUksRUFBRTtnQkFDTixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDbEIsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3BDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFB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QVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUNyQyxDQUFDLENBQUM7YUFDRCxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sR0FBRyxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2xFLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxJQUFJLENBQUM7WUFDRixLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ3RELEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDcEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUNyQyxDQUFDLENBQUM7YUFDRCxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sR0FBRyxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2xFLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxJQUFJLENBQUM7WUFDRixLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ3RELEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDcEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUNyQyxDQUFDLENBQUM7YUFDRCxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sR0FBRyxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2xFLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxJQUFJLENBQUM7WUFDRixLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ3RELEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDcEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUNyQyxDQUFDLENBQUM7YUFDRCxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sR0FBRyxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2xFLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxLQUFLLEVBQUUsQ0FBQTtRQUlaLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDbkMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNqQyxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO2FBQ3JDLElBQUksQ0FBQztZQUNGLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNwRCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3JDLENBQUMsQ0FBQzthQUNELEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDaEUsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLElBQUksQ0FBQztZQUNGLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNwRCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3JDLENBQUMsQ0FBQzthQUNELEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDaEUsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLElBQUksQ0FBQztZQUNGLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNwRCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3JDLENBQUMsQ0FBQzthQUNELEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDaEUsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLElBQUksQ0FBQztZQUNGLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNwRCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3JDLENBQUMsQ0FBQzthQUNELEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDaEUsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLElBQUksQ0FBQztZQUNGLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdEQsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNwRCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3JDLENBQUMsQ0FBQzthQUNELEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDaEUsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLEtBQUssRUFBRSxDQUFBO1FBSVosSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDOUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDOUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDOUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDbEMsQ0FBQztJQUVTLGdDQUFPLEdBQWpCO1FBQ0ksZUFBTSxDQUFDLHNCQUFzQixFQUFFLENBQUE7UUFDL0IsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVTLGtDQUFTLEdBQW5CO1FBQ0ksZUFBTSxDQUFDLHNCQUFzQixFQUFFLENBQUE7UUFDL0IsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQTlMZ0IsY0FBYztRQURsQyxPQUFPO09BQ2EsY0FBYyxDQWlNbEM7SUFBRCxxQkFBQztDQWpNRCxBQWlNQyxDQWpNMkMsZ0JBQU0sR0FpTWpEO2tCQWpNb0IsY0FBYyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVSU1nciBmcm9tIFwiLi4vRnJhbWV3b3JrL1VJTWdyXCI7XHJcbmltcG9ydCBVSVBhZ2UgZnJvbSBcIi4vVUlQYWdlXCI7XHJcbmltcG9ydCBDb25zdGFudCwgeyBQYW5lbE5hbWUgfSBmcm9tIFwiLi4vRnJhbWV3b3JrL0NvbnN0YW50XCI7XHJcbmltcG9ydCB7IGNvY29zeiB9IGZyb20gXCIuLi9GcmFtZXdvcmsvQ29jb3NaXCI7XHJcbmltcG9ydCBNc2cgZnJvbSBcIi4uL0ZyYW1ld29yay9Nc2dcIjtcclxuXHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVaVJlc3VycmVjdGlvbiBleHRlbmRzIFVJUGFnZSB7XHJcblxyXG4gICAgcHJpdmF0ZSBfU2NhbGVOb2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuICAgIHByaXZhdGUgX0J0blJlc3VycmVjdGlvbjogY2MuTm9kZSA9IG51bGw7XHJcbiAgICBwcml2YXRlIF9Ta2U6IGRyYWdvbkJvbmVzLkFybWF0dXJlRGlzcGxheSA9IG51bGw7XHJcbiAgICBwcml2YXRlIF9CdG5DYW5uZWw6IGNjLk5vZGUgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBfQ2lyY2xlNDogY2MuU3ByaXRlID0gbnVsbDtcclxuICAgIHByaXZhdGUgX0NpcmNsZTM6IGNjLlNwcml0ZSA9IG51bGw7XHJcbiAgICBwcml2YXRlIF9DaXJjbGUyOiBjYy5TcHJpdGUgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBfRGVsYXlUaW1lTGFibGU6IGNjLkxhYmVsID0gbnVsbDtcclxuICAgIHByaXZhdGUgX1Jlc3VycmVjdGlvbkRlbGF5VGltZTogbnVtYmVyID0gNTtcclxuICAgIHByaXZhdGUgX0FjdGlvbkxpc3Q6IGFueSA9IFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5faW5pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX2luaXQoKSB7XHJcbiAgICAgICAgbGV0IEdhbWU6IGNjLlByZWZhYiA9IGNvY29zei5yZXNNZ3IuZ2V0UmVzKFBhbmVsTmFtZS5VaVJlc3VycmVjdGlvbiwgY2MuUHJlZmFiKTtcclxuICAgICAgICBpZiAoR2FtZSkge1xyXG4gICAgICAgICAgICBsZXQgbm9kZTogY2MuTm9kZSA9IGNjLmluc3RhbnRpYXRlKEdhbWUpO1xyXG4gICAgICAgICAgICBpZiAobm9kZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcGFnZSA9IG5vZGU7XHJcbiAgICAgICAgICAgICAgICBjYy5maW5kKFwiQ2FudmFzL3VpXCIpLmFkZENoaWxkKG5vZGUpO1xyXG4gICAgICAgICAgICAgICAgbm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgbm9kZS5wb3NpdGlvbiA9IGNjLlZlYzIuWkVSTztcclxuICAgICAgICAgICAgICAgIHRoaXMuX29uTG9hZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBfb25Mb2FkKCkge1xyXG4gICAgICAgIHRoaXMuX1NjYWxlTm9kZSA9IHRoaXMuX3BhZ2UuZ2V0Q2hpbGRCeU5hbWUoXCJTY2FsZU5vZGVcIik7XHJcbiAgICAgICAgdGhpcy5fQnRuUmVzdXJyZWN0aW9uID0gdGhpcy5fU2NhbGVOb2RlLmdldENoaWxkQnlOYW1lKFwiQnRuUmVzdXJyZWN0aW9uXCIpO1xyXG4gICAgICAgIHRoaXMuX0J0bkNhbm5lbCA9IHRoaXMuX1NjYWxlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIkJ0bkNhbm5lbFwiKTtcclxuICAgICAgICB0aGlzLl9DaXJjbGU0ID0gdGhpcy5fU2NhbGVOb2RlLmdldENoaWxkQnlOYW1lKFwiVGltZVwiKS5nZXRDaGlsZEJ5TmFtZShcImNpcmNsZV80XCIpLmdldENvbXBvbmVudChjYy5TcHJpdGUpO1xyXG4gICAgICAgIHRoaXMuX0NpcmNsZTMgPSB0aGlzLl9TY2FsZU5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJUaW1lXCIpLmdldENoaWxkQnlOYW1lKFwiY2lyY2xlXzNcIikuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSk7XHJcbiAgICAgICAgdGhpcy5fQ2lyY2xlMiA9IHRoaXMuX1NjYWxlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIlRpbWVcIikuZ2V0Q2hpbGRCeU5hbWUoXCJjaXJjbGVfMlwiKS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKTtcclxuICAgICAgICB0aGlzLl9EZWxheVRpbWVMYWJsZSA9IHRoaXMuX1NjYWxlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIlRpbWVcIikuZ2V0Q2hpbGRCeU5hbWUoXCJudW1cIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKTtcclxuXHJcbiAgICAgICAgdGhpcy5fU3RhcnQoKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIHByaXZhdGUgX1N0YXJ0KCkge1xyXG4gICAgICAgIHRoaXMuX0J0blJlc3VycmVjdGlvbi5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCwgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uQnRuUmVzdXJyZWN0aW9uKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fQnRuQ2FubmVsLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX1NUQVJULCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMub25CdG5DYW5uZWwoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgb25CdG5SZXN1cnJlY3Rpb24oKSB7XHJcbiAgICAgICAgY2MubG9nKFwiMDAtLS0tLS0tLS0tLS0tXCIpO1xyXG4gICAgICAgIGNvY29zei5hdWRpb01nci5wbGF5YnRuRWZmZWN0KCk7XHJcbiAgICAgICAgTXNnLlNob3coXCLop4bpopHmkq3mlL7lpLHotKUhXCIpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBvbkJ0bkNhbm5lbCgpIHtcclxuXHJcbiAgICAgICAgY2MubG9nKFwiMDAtLS0tLS0tMjIyLS0tLS0tXCIpXHJcbiAgICAgICAgZm9yIChsZXQgYWN0aW9uIG9mIHRoaXMuX0FjdGlvbkxpc3QpIHtcclxuICAgICAgICAgICAgaWYgKGFjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgYWN0aW9uLnN0b3AoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjb2Nvc3oudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpXHJcbiAgICAgICAgY29jb3N6LmF1ZGlvTWdyLnBsYXlidG5FZmZlY3QoKTtcclxuICAgICAgICBjb2Nvc3oudWlNZ3Iub3BlblBhbmVsKFBhbmVsTmFtZS5VaUZhaWxlZCk7XHJcbiAgICAgICAgY2MuZ2FtZS5lbWl0KENvbnN0YW50LkVfVVBEQVRFX0NPSU4pO1xyXG4gICAgICAgIHRoaXMuX3BhZ2UuZGVzdHJveSgpO1xyXG4gICAgfVxyXG4gICAgcHJvdGVjdGVkIG9uT3BlbigpIHtcclxuICAgICAgICBjb2Nvc3ouc2NoZWR1bGUoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoTWF0aC5jZWlsKE1hdGguYWJzKHRoaXMuX0NpcmNsZTIuZmlsbFJhbmdlICogNSArIDUpKSA+IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0RlbGF5VGltZUxhYmxlLnN0cmluZyA9IE1hdGguY2VpbChNYXRoLmFicyh0aGlzLl9DaXJjbGUyLmZpbGxSYW5nZSAqIDUgKyA1KSkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDAuMDEpXHJcbiAgICAgICAgbGV0IGFjdGlvbjEgPSBjYy50d2Vlbih0aGlzLl9DaXJjbGUyKVxyXG4gICAgICAgICAgICAudG8oNSwgeyBmaWxsUmFuZ2U6IC0xIH0pXHJcbiAgICAgICAgICAgIC5jYWxsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25CdG5DYW5uZWwoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXJ0KClcclxuICAgICAgICBsZXQgYWN0aW9uMiA9IGNjLnR3ZWVuKHRoaXMuX1NjYWxlTm9kZS5nZXRDaGlsZEJ5TmFtZShcIkJnXCIpLmdldENoaWxkQnlOYW1lKFwiRGVsYXlCb3hcIikpXHJcbiAgICAgICAgICAgIC50bygxLCB7IG9wYWNpdHk6IDAgfSlcclxuICAgICAgICAgICAgLnRvKDEsIHsgb3BhY2l0eTogMjU1IH0pXHJcbiAgICAgICAgICAgIC50bygxLCB7IG9wYWNpdHk6IDAgfSlcclxuICAgICAgICAgICAgLnRvKDEsIHsgb3BhY2l0eTogMjU1IH0pXHJcbiAgICAgICAgICAgIC50bygxLCB7IG9wYWNpdHk6IDAgfSlcclxuICAgICAgICAgICAgLnN0YXJ0KClcclxuXHJcbiAgICAgICAgbGV0IGhlaWdodCA9IHRoaXMuX0NpcmNsZTMubm9kZS5oZWlnaHQ7XHJcbiAgICAgICAgbGV0IHdpZHRoID0gdGhpcy5fQ2lyY2xlMy5ub2RlLndpZHRoO1xyXG4gICAgICAgIGxldCBhY3Rpb24zID0gY2MudHdlZW4odGhpcy5fQ2lyY2xlMy5ub2RlKVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGUzLm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDE1MCwgd2lkdGg6IHdpZHRoICsgMTUwLCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGUzLm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDE1MCwgd2lkdGg6IHdpZHRoICsgMTUwLCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGUzLm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDE1MCwgd2lkdGg6IHdpZHRoICsgMTUwLCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGUzLm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDE1MCwgd2lkdGg6IHdpZHRoICsgMTUwLCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGUzLm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTMubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDE1MCwgd2lkdGg6IHdpZHRoICsgMTUwLCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuc3RhcnQoKVxyXG5cclxuXHJcblxyXG4gICAgICAgIGhlaWdodCA9IHRoaXMuX0NpcmNsZTQubm9kZS5oZWlnaHQ7XHJcbiAgICAgICAgd2lkdGggPSB0aGlzLl9DaXJjbGU0Lm5vZGUud2lkdGg7XHJcbiAgICAgICAgbGV0IGFjdGlvbjQgPSBjYy50d2Vlbih0aGlzLl9DaXJjbGU0Lm5vZGUpXHJcbiAgICAgICAgICAgIC5jYWxsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTQubm9kZS5oZWlnaHQgPSB0aGlzLl9DaXJjbGUyLm5vZGUuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fQ2lyY2xlNC5ub2RlLndpZHRoID0gdGhpcy5fQ2lyY2xlMi5ub2RlLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fQ2lyY2xlNC5ub2RlLm9wYWNpdHkgPSAyNTU7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50bygwLjc1LCB7IGhlaWdodDogaGVpZ2h0ICsgNzUsIHdpZHRoOiB3aWR0aCArIDc1LCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGU0Lm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTQubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTQubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDc1LCB3aWR0aDogd2lkdGggKyA3NSwgb3BhY2l0eTogMCB9KVxyXG4gICAgICAgICAgICAuZGVsYXkoMC4yNSlcclxuICAgICAgICAgICAgLmNhbGwoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fQ2lyY2xlNC5ub2RlLmhlaWdodCA9IHRoaXMuX0NpcmNsZTIubm9kZS5oZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGU0Lm5vZGUud2lkdGggPSB0aGlzLl9DaXJjbGUyLm5vZGUud2lkdGg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGU0Lm5vZGUub3BhY2l0eSA9IDI1NTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRvKDAuNzUsIHsgaGVpZ2h0OiBoZWlnaHQgKyA3NSwgd2lkdGg6IHdpZHRoICsgNzUsIG9wYWNpdHk6IDAgfSlcclxuICAgICAgICAgICAgLmRlbGF5KDAuMjUpXHJcbiAgICAgICAgICAgIC5jYWxsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTQubm9kZS5oZWlnaHQgPSB0aGlzLl9DaXJjbGUyLm5vZGUuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fQ2lyY2xlNC5ub2RlLndpZHRoID0gdGhpcy5fQ2lyY2xlMi5ub2RlLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fQ2lyY2xlNC5ub2RlLm9wYWNpdHkgPSAyNTU7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50bygwLjc1LCB7IGhlaWdodDogaGVpZ2h0ICsgNzUsIHdpZHRoOiB3aWR0aCArIDc1LCBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICAgIC5kZWxheSgwLjI1KVxyXG4gICAgICAgICAgICAuY2FsbCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9DaXJjbGU0Lm5vZGUuaGVpZ2h0ID0gdGhpcy5fQ2lyY2xlMi5ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTQubm9kZS53aWR0aCA9IHRoaXMuX0NpcmNsZTIubm9kZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX0NpcmNsZTQubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudG8oMC43NSwgeyBoZWlnaHQ6IGhlaWdodCArIDc1LCB3aWR0aDogd2lkdGggKyA3NSwgb3BhY2l0eTogMCB9KVxyXG4gICAgICAgICAgICAuZGVsYXkoMC4yNSlcclxuICAgICAgICAgICAgLnN0YXJ0KClcclxuXHJcblxyXG5cclxuICAgICAgICB0aGlzLl9BY3Rpb25MaXN0LnB1c2goYWN0aW9uMSlcclxuICAgICAgICB0aGlzLl9BY3Rpb25MaXN0LnB1c2goYWN0aW9uMilcclxuICAgICAgICB0aGlzLl9BY3Rpb25MaXN0LnB1c2goYWN0aW9uMylcclxuICAgICAgICB0aGlzLl9BY3Rpb25MaXN0LnB1c2goYWN0aW9uNClcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25DbG9zZSgpIHtcclxuICAgICAgICBjb2Nvc3oudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpXHJcbiAgICAgICAgY2MuZ2FtZS50YXJnZXRPZmYodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uRGVzdHJveSgpIHtcclxuICAgICAgICBjb2Nvc3oudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpXHJcbiAgICAgICAgY2MuZ2FtZS50YXJnZXRPZmYodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge31cclxufSJdfQ==