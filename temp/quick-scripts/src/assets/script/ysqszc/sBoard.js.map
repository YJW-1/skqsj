{"version":3,"sources":["assets\\script\\ysqszc\\sBoard.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;AAElF,8CAA6C;AAEvC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;;IA2BA,CAAC;IAxBG,iCAAc,GAAd,UAAe,OAAO,EAAE,IAAI,EAAE,KAAK;QAAnC,iBAaC;QAZG,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;YACxD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;SACzD;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,aAAa,CAAC,SAAS,EAAE;YACzE,eAAM,CAAC,YAAY,CAAC;gBAChB,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC;gBACrE,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;oBAC5B,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,CAAA;iBACxD;YACL,CAAC,EAAE,IAAI,CAAC,CAAA;SACX;IAEL,CAAC;IAED,wBAAwB;IAExB,eAAe;IAEf,wBAAK,GAAL;QACI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAA;IAC3C,CAAC;IAxBgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA2B5B;IAAD,eAAC;CA3BD,AA2BC,CA3BqC,EAAE,CAAC,SAAS,GA2BjD;kBA3BoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { cocosz } from \"../Framework/CocosZ\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n\r\n    onBeginContact(contact, self, other) {\r\n        if (this.node.getComponent(cc.RigidBody).gravityScale == 0) {\r\n            this.node.getComponent(cc.RigidBody).gravityScale = 1;\r\n        }\r\n        if (this.node.getComponent(cc.RigidBody).type == cc.RigidBodyType.Kinematic) {\r\n            cocosz.scheduleOnce(() => {\r\n                this.node.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\r\n                if (this.node.name == \"sBoard\") {\r\n                    this.node.getComponent(cc.PhysicsBoxCollider).apply()\r\n                }\r\n            }, 0.02)\r\n        }\r\n\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n        cc.log(this.node.parent.y, \"---------\")\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}