{"version":3,"sources":["assets\\script\\ysqszc\\levelNum.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { captureRejectionSymbol } from \"events\";\r\nimport { chdir } from \"process\";\r\nimport { cocosz } from \"../Framework/CocosZ\";\r\nimport theBall from \"./theBall\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class levelNum extends cc.Component {\r\n\r\n    // @property(cc.Label)\r\n    levelNum: cc.Label = null;\r\n    // @property(cc.Node)\r\n    mask: cc.Node = null\r\n\r\n    curLevel: number = 0;\r\n\r\n\r\n    initGame1() {\r\n\r\n\r\n        let prefab = cocosz.resMgr.getRes(\"level\" + this.curLevel, cc.Prefab);\r\n\r\n        for (let child of prefab.data.children) {\r\n            if (child.name == \"mapMask2\") {\r\n                let component = child.getComponents(cc.PhysicsPolygonCollider);\r\n                let list = [];\r\n                for (let poly of component) {\r\n                    if (poly.points) {\r\n                        list.push(poly.points)\r\n                    }\r\n                }\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"mapMask\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                let graphics2: cc.Graphics = node.getChildByName(\"line\").getComponent(cc.Graphics);\r\n                this.node.addChild(node);\r\n                node.setPosition(child.getPosition());\r\n                node.zIndex -= 999;\r\n                node.scaleX = child.scaleX;\r\n                node.scaleY = child.scaleY;\r\n                node.angle = child.angle;\r\n                let mask: cc.Mask = node.getComponent(cc.Mask);\r\n                let graphics = mask._graphics;\r\n                let rb = node.addComponent(cc.RigidBody);\r\n                rb.type = cc.RigidBodyType.Kinematic;\r\n                rb.gravityScale = 0;\r\n\r\n                for (let point of list) {\r\n                    let collider = node.addComponent(cc.PhysicsPolygonCollider);\r\n                    // cc.log(collider.tag, \"----------collider.tag\");\r\n                    collider.tag = 0;\r\n                    collider.points = [].concat(point);\r\n                    collider.apply();\r\n\r\n                    graphics.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics.fill();\r\n\r\n\r\n\r\n                    graphics2.lineWidth = 10;\r\n                    graphics2.strokeColor = new cc.Color(40, 33, 13, 255);\r\n                    graphics2.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics2.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics2.lineTo(point[0].x, point[0].y);\r\n\r\n                    graphics2.stroke();\r\n\r\n                }\r\n                continue;\r\n            }\r\n            else if (child.name == \"levelNum\") {\r\n                let prefab = cocosz.resMgr.getRes(\"levelNum\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                this.node.addChild(node);\r\n                node.setPosition(child.getPosition());\r\n                node.getChildByName(\"num\").getComponent(cc.Label).string = cocosz.gameMgr.curGame2LevelID + \"\";\r\n                continue;\r\n            }\r\n\r\n            let prefab = cocosz.resMgr.getRes(child.name, cc.Prefab);\r\n            let node = cc.instantiate(prefab);\r\n            node.scaleX = child.scaleX;\r\n            node.scaleY = child.scaleY;\r\n            node.angle = child.angle;\r\n            node.setPosition(child.getPosition());\r\n            this.node.addChild(node);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    initGame2() {\r\n\r\n        let prefab = cocosz.resMgr.getRes(\"MapData\", cc.JsonAsset).json[\"level\" + this.curLevel];\r\n        for (let child of prefab) {\r\n            // cc.log(child);\r\n            if (child.name == \"mapMask2\") {\r\n                // let component = child.getComponents(cc.PhysicsPolygonCollider);\r\n                let list = child.list;\r\n\r\n                // for (let poly of component) {\r\n                //     if (poly.points) {\r\n                //         list.push(poly.points)\r\n                //     }\r\n                // }\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"mapMask\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                let graphics2: cc.Graphics = node.getChildByName(\"line\").getComponent(cc.Graphics);\r\n                this.node.addChild(node);\r\n                node.x = child.x;\r\n                node.y = child.y;\r\n                node.zIndex -= 999;\r\n                node.scaleX = child.scaleX;\r\n                node.scaleY = child.scaleY;\r\n                node.angle = child.angle;\r\n                let mask: cc.Mask = node.getComponent(cc.Mask);\r\n                let graphics = mask._graphics;\r\n                let rb = node.addComponent(cc.RigidBody);\r\n                rb.type = cc.RigidBodyType.Kinematic;\r\n                rb.gravityScale = 0;\r\n\r\n                for (let point of list) {\r\n                    let collider = node.addComponent(cc.PhysicsPolygonCollider);\r\n                    // cc.log(collider.tag, \"----------collider.tag\");\r\n                    collider.tag = 0;\r\n                    let bb = [];\r\n                    for (let aa of point) {\r\n                        bb.push(cc.v2(aa.x, aa.y))\r\n                    }\r\n                    point = bb\r\n                    collider.points = [].concat(point);\r\n                    collider.apply();\r\n\r\n                    graphics.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics.fill();\r\n\r\n\r\n\r\n                    graphics2.lineWidth = 10;\r\n                    graphics2.strokeColor = new cc.Color(40, 33, 13, 255);\r\n                    graphics2.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics2.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics2.lineTo(point[0].x, point[0].y);\r\n\r\n                    graphics2.stroke();\r\n\r\n                }\r\n                continue;\r\n            }\r\n            else if (child.name == \"levelNum\") {\r\n                let prefab = cocosz.resMgr.getRes(\"levelNum\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                this.node.addChild(node);\r\n                node.x = child.x;\r\n                node.y = child.y;\r\n                node.getChildByName(\"num\").getComponent(cc.Label).string = cocosz.gameMgr.curGame2LevelID + \"\";\r\n                continue;\r\n            }\r\n\r\n            let prefab = cocosz.resMgr.getRes(child.name, cc.Prefab);\r\n            let node = cc.instantiate(prefab);\r\n            node.scaleX = child.scaleX;\r\n            node.scaleY = child.scaleY;\r\n            node.angle = child.angle;\r\n            node.x = child.x;\r\n            node.y = child.y;\r\n            this.node.addChild(node);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    start() {\r\n        // cc.log(this.curLevel)\r\n\r\n\r\n        this.initGame2()\r\n\r\n\r\n        this.scheduleOnce(() => {\r\n            for (let child of this.node.children) {\r\n                let rb = child.getComponent(cc.RigidBody);\r\n                if (!rb || child.name == \"cactus6\") {\r\n                    cc.log(child.name, \"---------child\")\r\n                    continue\r\n                };\r\n                rb.gravityScale = 0;\r\n                if ((this.curLevel == 10 && child.name == \"nimiCactus12\") || (this.curLevel == 13 && child.name == \"stone\") || (this.curLevel == 16 && child.name == \"stone\")) {\r\n                    rb.gravityScale = 1;\r\n                    if (child.getComponent(cc.PhysicsCircleCollider)) {\r\n                        child.getComponent(cc.PhysicsCircleCollider).friction = 0.05;\r\n                    }\r\n                }\r\n                else {\r\n                    rb.linearVelocity = cc.v2(0, -200);\r\n                    if (child.name == \"sBoard\") {\r\n                        let rb = child.getComponent(cc.RigidBody);\r\n                        let v = rb.linearVelocity;\r\n                        v = cc.v2(0, -200);\r\n                        rb.linearVelocity = v;\r\n                        rb.angularVelocity = 100;\r\n                    }\r\n                    else if (this.curLevel == 6 && child.name == \"stone\") {\r\n                        rb.linearVelocity = cc.v2(-child.x / 10, -200);\r\n                    }\r\n                    else if (this.curLevel == 16 && child.name == \"stone\") {\r\n                        rb.linearVelocity = cc.v2(0, -200);\r\n                    }\r\n                }\r\n                // if (rb) {\r\n                cc.log(child.name)\r\n                // }\r\n            }\r\n        }, 0.5)\r\n\r\n        this.scheduleOnce(() => {\r\n            this.node.destroy();\r\n        }, 40)\r\n\r\n\r\n        // this.mask.removeFromParent();\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}