{"version":3,"sources":["assets\\script\\Framework\\NormalModelCtr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameCtr from \"./GameCtr\";\r\nimport Constant, { GameState, PanelName, PageName, PrefabName, FloorType, tag } from \"./Constant\";\r\n// import PangXie from \"../item/PangXie\";\r\n// import JiGuang from \"../item/JiGuang\";\r\n// import Wall from \"../item/Wall\";\r\nimport CocosZ, { cocosz } from \"./CocosZ\";\r\nimport GameBgCtr from \"./GameBgCtr\";\r\nimport Msg from \"./Msg\";\r\nimport { createConnection } from \"net\";\r\n// import UiLottery from \"../Ui/UiLottery\";\r\n// import { utils } from \"../common-plugin/Scripts/Utils\";\r\n// import { utils } from \"../statistic/Utils\";\r\n\r\n// import RoleController from \"../role/RoleController\";\r\n// import GameBgCtr from \"../GameBgCtr\";\r\n// import RongYan from \"../item/RongYan\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nlet levelDect = {\r\n    \"134\": 129,\r\n    \"139\": 139,\r\n    \"44\": 128,\r\n    \"49\": 138,\r\n    \"54\": 127,\r\n    \"59\": 137,\r\n    \"64\": 126,\r\n    \"69\": 136,\r\n    \"74\": 125,\r\n    \"79\": 135,\r\n\r\n\r\n    \"84\": 124,\r\n    \"89\": 134,\r\n    \"94\": 123,\r\n    \"99\": 133,\r\n    \"104\": 122,\r\n    \"109\": 132,\r\n    \"114\": 121,\r\n    \"119\": 131,\r\n    \"124\": 120,\r\n    \"129\": 130,\r\n}\r\n\r\n@ccclass\r\nexport default class NormalModelCtr extends GameCtr {\r\n\r\n    private _itemList: cc.Node[] = [];\r\n\r\n    private _Num: number = 0;//适应高度与原高度的差值\r\n    private GameNode: cc.Node = null;\r\n    private _gameBg: GameBgCtr = null;\r\n    private _BgNode: cc.Node = null;\r\n    private _lizi: cc.Prefab = null;\r\n    private _DecorateType17Pos: any = {};\r\n\r\n    private supplement: any = null;\r\n    private supplement2: any = null;\r\n\r\n\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n        this.GameNode = cc.find(\"Canvas/Game\");\r\n\r\n        this._lizi = cocosz.resMgr.getRes(\"lizi\", cc.Prefab);\r\n        this._initRes();\r\n        this._gameState = GameState.Prepare;\r\n        if (cc.find(\"Canvas\").height > 2000) {\r\n            this._Num = cc.find(\"Canvas\").height - 1920;\r\n            if (this._Num != 0) {\r\n                this._Num *= 0.5;\r\n            }\r\n        }\r\n    }\r\n\r\n    start() {\r\n        cc.director.getScheduler().enableForTarget(this);\r\n        this._initBg();\r\n\r\n        if (cocosz.sceneMgr.sceneName == \"Game\") {\r\n\r\n            this._initGame()\r\n            // this._initGame2();\r\n        }\r\n        else if (cocosz.sceneMgr.sceneName == \"Game2\") {\r\n            this._initEndlessGame();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    onEnable() {\r\n        cc.game.on(Constant.E_GAME_LOGIC, this._onMessageHandlerr, this);\r\n        cc.game.on(Constant.E_LEVEL_COMPLETE, () => {\r\n            // cocosz.audioMgr.playVectoryEffect();\r\n            // let node = cc.instantiate(this._lizi);\r\n            // node.parent = this.GameNode;\r\n            // node.position = cc.Vec2.ZERO;\r\n        }, this);\r\n    }\r\n\r\n    onDisable() {\r\n        cc.game.targetOff(this);\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n    protected _handleInput() {\r\n        if (this._gameState == GameState.Prepare) {\r\n            this._gameState = GameState.Start;\r\n            cc.game.emit(Constant.E_GAME_LOGIC, { type: Constant.E_GAME_START });\r\n        }\r\n    }\r\n\r\n    private _onMessageHandlerr(event: any) {\r\n        switch (event.type) {\r\n            case Constant.E_GAME_START: {\r\n                if (this._gameState == GameState.Prepare) {\r\n                    this._gameState = GameState.Start;\r\n\r\n                }\r\n                if (this.GameNode.getChildByName(\"Guide\")) {\r\n                    this.GameNode.getChildByName(\"Guide\").destroy();\r\n                }\r\n                // utils.StartGame((cocosz.dataMgr.CurLevelId + 1).toString());\r\n                break;\r\n            }\r\n            case Constant.E_LEVEL_FAILED: {\r\n                // 通关失败\r\n                this._gameState = GameState.Failed;\r\n                this.LevelUp();\r\n                break;\r\n            }\r\n            case Constant.E_LEVEL_COMPLETE: {\r\n                // 通关成功\r\n                this._gameState = GameState.Success;\r\n\r\n                this.LevelUp();\r\n                if (this._BgNode) {\r\n                    this._initBg();\r\n                }\r\n                break;\r\n            }\r\n\r\n        }\r\n    }\r\n    private LevelUp() {\r\n        this.GameNode.removeAllChildren();\r\n        this._gameState = GameState.Prepare;\r\n    }\r\n    private _initBg() {\r\n        this._gameBg = new GameBgCtr();\r\n        this._gameBg.initBG();\r\n        this._BgNode = cc.find(\"Canvas/BG\");\r\n    }\r\n\r\n\r\n    onGetLevel() {\r\n        for (let idx in levelDect) {\r\n            if (idx == cocosz.dataMgr.CurLevelId.toString()) {\r\n                if ((cocosz.dataMgr.CurLevelId + 1) % 5 == 0) {\r\n                    cocosz.gameMgr.surplusLevelNum++\r\n                }\r\n\r\n                if ((cocosz.dataMgr.CurLevelId + 1) % 10 == 0) {\r\n                    cocosz.gameMgr.surplusLevelNum++\r\n                }\r\n                cocosz.dataMgr.CurLevelId = levelDect[idx];\r\n                cc.log(\"----cocosz.dataMgr.CurLevelId---onGetLevel--\", cocosz.dataMgr.CurLevelId)\r\n\r\n                // if (cocosz.dataMgr.CurLevelId > 120) {\r\n                //     for (let idx2 in levelDect) {\r\n                //         if (levelDect[idx2] == idx) {\r\n                //             cocosz.dataMgr.CurLevelId = +idx2\r\n                //         }\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onGetLevel2() {\r\n        for (let idx in levelDect) {\r\n            if (levelDect[idx] == cocosz.dataMgr.CurLevelId) {\r\n                cocosz.dataMgr.CurLevelId = +idx;\r\n                if (cocosz.dataMgr.CurLevelId > 120) {\r\n                    cocosz.gameMgr.surplusLevelNum++\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _initEndlessGame() {\r\n\r\n        cocosz.gameMgr.isGameOver = false;\r\n        cocosz.gameMgr.isLeftBalloon = false;\r\n        cocosz.gameMgr.isrightBalloon = false;\r\n        cocosz.gameMgr.isOpen = false;\r\n        cocosz.gameMgr.isFeed = false;\r\n\r\n        cocosz.gameMgr.surplusLevelNum = 0\r\n        cocosz.gameMgr.touchNum = 0;\r\n\r\n        cocosz.gameMgr.curLevelID = cocosz.dataMgr.CurLevelId;\r\n\r\n        if (cocosz.dataMgr.MaxUnlockLevelCount < cocosz.gameMgr.curLevelID) {\r\n            cocosz.dataMgr.MaxUnlockLevelCount = cocosz.gameMgr.curLevelID\r\n        }\r\n        // window.onGameEvent(3, \"无尽模式开始\", 1);\r\n        let Game = cc.find(\"Canvas/gameBG\");\r\n        let gameBg = cc.instantiate(cocosz.resMgr.getRes(\"gameBg\", cc.Prefab));\r\n        Game.addChild(gameBg);\r\n\r\n\r\n    }\r\n\r\n    private _initGame2() {\r\n        let Game = cc.find(\"Canvas/Game\");\r\n        window.onGameStart(1, (cocosz.dataMgr.CurLevelId + 1));\r\n\r\n\r\n        let gameBg = cc.instantiate(cocosz.resMgr.getRes(\"gameBg\", cc.Prefab));\r\n        gameBg.zIndex -= 999;\r\n        Game.parent.addChild(gameBg);\r\n\r\n\r\n        cocosz.gameMgr.isGameOver = false;\r\n        cocosz.gameMgr.isLeftBalloon = false;\r\n        cocosz.gameMgr.isrightBalloon = false;\r\n        cocosz.gameMgr.isOpen = false;\r\n        cocosz.gameMgr.isFeed = false;\r\n        // cocosz.gameMgr.isOpenRewardLevel = false;\r\n        cocosz.gameMgr.fraction = 0\r\n\r\n        cocosz.gameMgr.surplusLevelNum = 0\r\n        cocosz.gameMgr.touchNum = 0;\r\n\r\n        // let num = this._getLevelID()\r\n        // if (cocosz.dataMgr.CurLevelId >= 120) {\r\n\r\n        cocosz.gameMgr.curLevelID = cocosz.dataMgr.CurLevelId;\r\n\r\n\r\n        // if (cocosz.gameMgr.LevelNum >= 6) {\r\n        //     cocosz.gameMgr.isOpenRewardLevel = true;\r\n        // }\r\n\r\n        // if (cocosz.gameMgr.LevelNum2 >= 2) {\r\n\r\n        //     cocosz.gameMgr.isOpenLottery = true;\r\n        // }\r\n\r\n\r\n        // if (cocosz.gameMgr.isOpenRewardLevel) {\r\n        //     Msg.Show(\"特殊关卡已触发,过关后即可进入特殊关卡\");\r\n        // }\r\n        // else if (cocosz.gameMgr.isOpenLottery) {\r\n        //     Msg.Show(\"幸运抽抽抽已触发,过关后即可抽取大奖\");\r\n        // }\r\n        // if (cocosz.dataMgr.MaxUnlockLevelCount < cocosz.gameMgr.curLevelID) {\r\n        //     cocosz.dataMgr.MaxUnlockLevelCount = cocosz.gameMgr.curLevelID\r\n        // }\r\n        // //     // cocosz.dataMgr.CurLevelId = Math.floor(((cocosz.gameMgr.curLevelID - 120) % 110) * Math.random()) + 20;\r\n\r\n        // cc.log(\"gameMgr.curLevelID:\" + cocosz.gameMgr.curLevelID, \"dataMgr.CurLevelId:\" + cocosz.dataMgr.CurLevelId)\r\n        // if (cocosz.dataMgr.CurLevelId >= 140) {\r\n\r\n        //     cocosz.dataMgr.CurLevelId = cocosz.dataMgr.getRamdomLevel();\r\n        //     if (cocosz.dataMgr.CurLevelId >= 120) {\r\n        //         cocosz.gameMgr.surplusLevelNum++;\r\n        //         cc.log(cocosz.gameMgr.surplusLevelNum, \"--cocosz.gameMgr.surplusLevelNum\")\r\n        //     }\r\n        //     if (cocosz.dataMgr.CurLevelId >= 130) {\r\n        //         cocosz.gameMgr.surplusLevelNum++;\r\n        //     }\r\n        // }\r\n        // else {\r\n        //     if (cocosz.dataMgr.CurLevelId >= 120) {\r\n\r\n        //         this.onGetLevel2();\r\n        //     }\r\n        //     else {\r\n        //         this.onGetLevel();\r\n        //     }\r\n        // }\r\n        // if (cocosz.dataMgr.CurLevelId == 129) {\r\n        //     cocosz.gameMgr.surplusLevelNum = 1;\r\n        // }\r\n\r\n\r\n\r\n        let levelN = +cocosz.dataMgr.CurLevelId\r\n        if (levelN >= 100) {\r\n            cocosz.dataMgr.CurLevelId %= 100;\r\n            cocosz.dataMgr.CurLevelId += 20;\r\n        }\r\n\r\n        if (cocosz.dataMgr.CurLevelId >= 80) {\r\n            cocosz.dataMgr.CurLevelId += 40;\r\n        }\r\n        let str = \"map\" + (cocosz.dataMgr.CurLevelId + 1);\r\n        let mapData = cocosz.resMgr.getRes(\"MapData2\", cc.JsonAsset).json[str];\r\n\r\n\r\n\r\n\r\n\r\n        for (let idx of [139]) {\r\n            if (cocosz.dataMgr.CurLevelId == idx) {\r\n                cocosz.gameMgr.surplusLevelNum++;\r\n            }\r\n        }\r\n\r\n\r\n        for (let dect of mapData) {\r\n            let childName = dect.name;\r\n\r\n            if (childName == \"mapMaskPoint\") {\r\n                let list = dect[\"list\"];\r\n\r\n                let list2 = [];\r\n                for (let list3 of list) {\r\n                    let list4 = []\r\n                    for (let pos of list3) {\r\n                        let a = cc.v2(pos.x, pos.y);\r\n                        list4.push(a);\r\n                    }\r\n                    list2.push(list4);\r\n                }\r\n                list = list2;\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"mapMask\", cc.Prefab)\r\n                let node = cc.instantiate(prefab);\r\n                // node.x = list.x\r\n                // node.y = list.y\r\n\r\n                node.setPosition(cc.v2(dect.x, dect.y));\r\n                Game.addChild(node);\r\n                node.zIndex -= 999;\r\n                let mask: cc.Mask = node.getComponent(cc.Mask);\r\n                let graphics = mask._graphics;\r\n                let graphics2: cc.Graphics = node.getChildByName(\"line\").getComponent(cc.Graphics);\r\n                let rb = node.addComponent(cc.RigidBody);\r\n                rb.type = cc.RigidBodyType.Static;\r\n\r\n                for (let point of list) {\r\n                    let collider = node.addComponent(cc.PhysicsPolygonCollider);\r\n                    collider.points = [].concat(point);\r\n                    collider.apply();\r\n\r\n                    graphics.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics.fill();\r\n\r\n\r\n                    if (cocosz.dataMgr.CurLevelId < 120) {\r\n                        graphics2.lineWidth = 15;\r\n                        graphics2.strokeColor = new cc.Color(40, 33, 13, 255);\r\n                        graphics2.moveTo(point[0].x, point[0].y);\r\n                        for (let v2 of point) {\r\n                            graphics2.lineTo(v2.x, v2.y);\r\n                        }\r\n                        graphics2.lineTo(point[0].x, point[0].y);\r\n                        graphics2.stroke();\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            else if (childName == \"sandMaskPoint\") {\r\n\r\n                // let point = child.getComponent(cc.PhysicsPolygonCollider).points;\r\n                // let component = child.getComponents(cc.PhysicsPolygonCollider);\r\n                let list = dect[\"list\"];\r\n\r\n                let list2 = [];\r\n                for (let list3 of list) {\r\n                    let list4 = []\r\n                    for (let pos of list3) {\r\n                        let a = cc.v2(pos.x, pos.y);\r\n                        list4.push(a);\r\n                    }\r\n                    list2.push(list4);\r\n                }\r\n                list = list2;\r\n\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"sandMask\", cc.Prefab)\r\n                let node = cc.instantiate(prefab);\r\n                node.x = dect.x\r\n                node.y = dect.y\r\n                cc.log(dect)\r\n                Game.addChild(node);\r\n                node.zIndex -= 998;\r\n                let script = node.getChildByName(\"node_dirty\").getComponent(\"test\");\r\n                script.reset(list)\r\n                let mask: cc.Mask = node.getComponent(cc.Mask);\r\n                let graphics = mask._graphics;\r\n\r\n                // graphics.moveTo(point[0].x, point[0].y);\r\n                // for (let v2 of point) {\r\n                //     graphics.lineTo(v2.x, v2.y);\r\n                // }\r\n                // graphics.fill();\r\n\r\n                for (let point of list) {\r\n                    graphics.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics.fill();\r\n                }\r\n            }\r\n\r\n            else if (childName == \"baffle\" || childName == \"handTips\" || childName == \"role\" || childName == \"fan\") {\r\n                let data = dect;\r\n                // cc.log(data, childName);\r\n                let prefab = cocosz.resMgr.getRes(childName, cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                if (data.scale) {\r\n                    node.scale = data.scale;\r\n                }\r\n                if (data.angle) {\r\n                    node.angle = data.angle;\r\n                }\r\n                node.x = data.x;\r\n                node.y = data.y;\r\n                Game.addChild(node);\r\n            }\r\n\r\n            else if (childName == \"propMoveFloor\" || childName == \"enemy\" || childName == \"prop\") {\r\n                let parent = new cc.Node;\r\n                parent.name = childName;\r\n                // cc.log(dect)\r\n                parent.x = dect.x;\r\n                parent.y = dect.y;\r\n                for (let data of dect.list) {\r\n                    // let dect = mapData[childName][child2Name];\r\n                    let prefab = cocosz.resMgr.getRes(data.name, cc.Prefab);\r\n                    let node = cc.instantiate(prefab);\r\n\r\n                    if (data.name == \"carton\") {\r\n                        parent.zIndex += 1003\r\n                    }\r\n                    if (data.scaleX) {\r\n\r\n                        node.scaleX = data.scaleX;\r\n                    }\r\n                    if (data.scaleY) {\r\n\r\n                        node.scaleY = data.scaleY;\r\n                    }\r\n                    if (data.width) {\r\n\r\n                        node.width = data.width;\r\n                    }\r\n                    if (data.angle) {\r\n                        node.angle = data.angle;\r\n                    }\r\n                    if (data.x) {\r\n                        node.x = data.x\r\n                    }\r\n                    if (data.y) {\r\n                        node.y = data.y\r\n                    }\r\n                    // node.setPosition(cc.v2(data.x, data.y));\r\n                    if (data.name == \"nimiCactus\") {\r\n                        node.angle += 360 * Math.random()\r\n                    }\r\n                    else if (data.name == \"floor11\") {\r\n                        // cc.log(data)\r\n                        node.getChildByName(\"rocket\").scaleX = data[\"rocket\"].scaleX;\r\n                    }\r\n                    else if (data.name == \"floor17\") {\r\n                        let floor = data[\"floor\"];\r\n                        cc.log(floor)\r\n                        node.getChildByName(\"floor\").x = floor.x;\r\n                        node.getChildByName(\"floor\").y = floor.y;\r\n                        node.getChildByName(\"floor\").angle = floor.angle;\r\n                        node.getChildByName(\"floor\").scaleX = floor.scaleX;\r\n                        node.getChildByName(\"floor\").scaleY = floor.scaleY;\r\n                    }\r\n                    else if (data.name == \"floorRotetaCom\") {\r\n                        let floor = data[\"floor\"];\r\n                        let direction = data[\"direction\"];\r\n                        cc.log(data)\r\n                        node.getChildByName(\"floor\").angle = floor.angle;\r\n                        node.getChildByName(\"floor\").scaleX = floor.scaleX;\r\n                        node.getChildByName(\"floor\").scaleY = floor.scaleY;\r\n\r\n\r\n                        node.getChildByName(\"direction\").angle = direction.angle;\r\n                        node.getChildByName(\"direction\").scaleX = direction.scaleX;\r\n                        node.getChildByName(\"direction\").scaleY = direction.scaleY;\r\n                    }\r\n                    parent.addChild(node);\r\n                }\r\n                Game.addChild(parent);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private _getLevelID() {\r\n        let num = 0;\r\n\r\n        if (cocosz.dataMgr.CurLevelId >= 120) {\r\n\r\n        }\r\n\r\n        return num\r\n    }\r\n\r\n\r\n    private _initGame() {\r\n        let Game = cc.find(\"Canvas/Game\");\r\n        window.onGameStart(1, (cocosz.dataMgr.CurLevelId + 1));\r\n\r\n\r\n        let gameBg = cc.instantiate(cocosz.resMgr.getRes(\"gameBg\", cc.Prefab));\r\n        Game.parent.addChild(gameBg);\r\n\r\n\r\n        // let c = cc.tween().by(180, { angle: 360 });\r\n        // cc.tween(gameBg.getChildByName(\"home_animation_light\"))\r\n        //     .repeatForever(c)\r\n        //     .start()\r\n\r\n        cocosz.gameMgr.isGameOver = false;\r\n        cocosz.gameMgr.isLeftBalloon = false;\r\n        cocosz.gameMgr.isrightBalloon = false;\r\n        cocosz.gameMgr.isOpen = false;\r\n        cocosz.gameMgr.isFeed = false;\r\n\r\n        cocosz.gameMgr.surplusLevelNum = 0\r\n        cocosz.gameMgr.touchNum = 0;\r\n\r\n        // let num = this._getLevelID()\r\n        // if (cocosz.dataMgr.CurLevelId >= 120) {\r\n        cocosz.gameMgr.curLevelID = cocosz.dataMgr.CurLevelId;\r\n\r\n        if (cocosz.dataMgr.MaxUnlockLevelCount < cocosz.gameMgr.curLevelID) {\r\n            cocosz.dataMgr.MaxUnlockLevelCount = cocosz.gameMgr.curLevelID\r\n        }\r\n        //     // cocosz.dataMgr.CurLevelId = Math.floor(((cocosz.gameMgr.curLevelID - 120) % 110) * Math.random()) + 20;\r\n\r\n        // cc.log(\"gameMgr.curLevelID:\" + cocosz.gameMgr.curLevelID, \"dataMgr.CurLevelId:\" + cocosz.dataMgr.CurLevelId)\r\n        // cocosz.dataMgr.CurLevelId %= 100;\r\n        // let str = \"level\" + (cocosz.dataMgr.CurLevelId + 1)\r\n        // cc.log(cocosz.resMgr.getRes(\"MapData\", cc.JsonAsset).json)\r\n        // let mapData = cocosz.resMgr.getRes(\"MapData\", cc.JsonAsset).json[str];\r\n        // if (cocosz.dataMgr.CurLevelId >= 80) {\r\n        //     cocosz.dataMgr.CurLevelId += 40;\r\n        //     str = \"map\" + (cocosz.dataMgr.CurLevelId + 1)\r\n        //     mapData = cocosz.resMgr.getRes(\"MapData2\", cc.JsonAsset).json[str];\r\n        // }\r\n\r\n        for (let idx of [139]) {\r\n            if (cocosz.dataMgr.CurLevelId == idx) {\r\n                cocosz.gameMgr.surplusLevelNum++;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // if (cocosz.dataMgr.CurLevelId >= 140) {\r\n\r\n        // cocosz.dataMgr.CurLevelId = cocosz.dataMgr.getRamdomLevel();\r\n        // if (cocosz.dataMgr.CurLevelId >= 120) {\r\n        //     cocosz.gameMgr.surplusLevelNum++;\r\n        //     cc.log(cocosz.gameMgr.surplusLevelNum, \"--cocosz.gameMgr.surplusLevelNum\")\r\n        // }\r\n        // if (cocosz.dataMgr.CurLevelId >= 130) {\r\n        //     cocosz.gameMgr.surplusLevelNum++;\r\n        // }\r\n        // }\r\n        // else {\r\n        //     if (cocosz.dataMgr.CurLevelId >= 120) {\r\n\r\n        //         this.onGetLevel2();\r\n        //     }\r\n        //     else {\r\n        //         this.onGetLevel();\r\n        //     }\r\n        // }\r\n        //     cc.log(cocosz.dataMgr.CurLevelId)\r\n        // }\r\n\r\n        cc.log(\"gameMgr.curLevelID:\" + cocosz.gameMgr.curLevelID, \"dataMgr.CurLevelId:\" + cocosz.dataMgr.CurLevelId)\r\n\r\n\r\n\r\n        // if (cocosz.dataMgr.CurLevelId == 129) {\r\n        //     cocosz.gameMgr.surplusLevelNum = 1;\r\n        // }\r\n\r\n\r\n        let levelN = +cocosz.dataMgr.CurLevelId\r\n        if (levelN >= 100) {\r\n            cocosz.dataMgr.CurLevelId %= 100;\r\n\r\n            cocosz.dataMgr.CurLevelId += 20;\r\n\r\n        }\r\n\r\n        if (cocosz.dataMgr.CurLevelId >= 80) {\r\n            cocosz.dataMgr.CurLevelId += 40;\r\n\r\n        }\r\n        let map: cc.Prefab = cocosz.resMgr.getRes(\"map\" + (cocosz.dataMgr.CurLevelId + 1), cc.Prefab);\r\n\r\n        if (cocosz.dataMgr.CurLevelId >= 120 && cocosz.gameMgr.curLevelID > 140) {\r\n            map = cocosz.resMgr.getRes(\"map\" + cocosz.dataMgr.CurLevelId, cc.Prefab)\r\n        }\r\n\r\n        for (let child of map.data.children) {\r\n            if (child.name == \"mapMaskPoint\") {\r\n\r\n                let component = child.getComponents(cc.PhysicsPolygonCollider);\r\n                let list = [];\r\n                for (let poly of component) {\r\n                    if (poly.points) {\r\n                        list.push(poly.points)\r\n                    }\r\n                }\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"mapMask\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                let graphics2: cc.Graphics = node.getChildByName(\"line\").getComponent(cc.Graphics);\r\n                Game.addChild(node);\r\n                cc.log(child.y, \"------------child.y\", list)\r\n                node.setPosition(child.getPosition());\r\n                node.zIndex -= 999;\r\n                let mask: cc.Mask = node.getComponent(cc.Mask);\r\n                let graphics = mask._graphics;\r\n                let rb = node.addComponent(cc.RigidBody);\r\n                rb.type = cc.RigidBodyType.Static;\r\n\r\n                for (let point of list) {\r\n                    let collider = node.addComponent(cc.PhysicsPolygonCollider);\r\n                    cc.log(collider.tag, \"----------collider.tag\");\r\n                    collider.tag = 0;\r\n                    collider.points = [].concat(point);\r\n                    collider.apply();\r\n\r\n                    graphics.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics.fill();\r\n\r\n\r\n                    if (cocosz.dataMgr.CurLevelId < 120) {\r\n\r\n                        graphics2.lineWidth = 15;\r\n                        graphics2.strokeColor = new cc.Color(40, 33, 13, 255);\r\n                        graphics2.moveTo(point[0].x, point[0].y);\r\n                        for (let v2 of point) {\r\n                            graphics2.lineTo(v2.x, v2.y);\r\n                        }\r\n                        graphics2.lineTo(point[0].x, point[0].y);\r\n                        graphics2.stroke();\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            else if (child.name == \"sandMaskPoint\") {\r\n\r\n                // let point = child.getComponent(cc.PhysicsPolygonCollider).points;\r\n                let component = child.getComponents(cc.PhysicsPolygonCollider);\r\n                let list = [];\r\n                for (let poly of component) {\r\n                    if (poly.points) {\r\n                        list.push(poly.points)\r\n                    }\r\n                }\r\n\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"sandMask\", cc.Prefab)\r\n                let node = cc.instantiate(prefab);\r\n                node.setPosition(child.getPosition())\r\n                Game.addChild(node);\r\n                node.zIndex -= 998;\r\n                if (cocosz.dataMgr.CurLevelId == 119) {\r\n\r\n                    node.zIndex += 998;\r\n                };\r\n\r\n                let script = node.getChildByName(\"node_dirty\").getComponent(\"test\");\r\n                script.reset(list)\r\n                let mask: cc.Mask = node.getComponent(cc.Mask);\r\n                let graphics = mask._graphics;\r\n\r\n                // graphics.moveTo(point[0].x, point[0].y);\r\n                // for (let v2 of point) {\r\n                //     graphics.lineTo(v2.x, v2.y);\r\n                // }\r\n                // graphics.fill();\r\n\r\n                for (let point of list) {\r\n                    graphics.moveTo(point[0].x, point[0].y);\r\n                    for (let v2 of point) {\r\n                        graphics.lineTo(v2.x, v2.y);\r\n                    }\r\n                    graphics.fill();\r\n                }\r\n            }\r\n\r\n            else if (child.name == \"role\") {\r\n\r\n                let node = cc.instantiate(cocosz.resMgr.getRes(\"role\", cc.Prefab));\r\n                node.setPosition(child.getPosition());\r\n                node.scale = child.scale;\r\n                node.angle = child.angle;\r\n                Game.addChild(node);\r\n            }\r\n\r\n            else if (child.name == \"baffle\") {\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"baffle\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                node.scale = child.scale;\r\n                node.angle = child.angle;\r\n                node.setPosition(child.getPosition());\r\n                Game.addChild(node);\r\n            }\r\n            else if (child.name == \"fan\") {\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"fan\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                node.scale = child.scale;\r\n                node.angle = child.angle;\r\n                node.setPosition(child.getPosition());\r\n                Game.addChild(node);\r\n            }\r\n            else if (child.name == \"handTips\") {\r\n\r\n                let prefab = cocosz.resMgr.getRes(\"handTips\", cc.Prefab);\r\n                let node = cc.instantiate(prefab);\r\n                node.scale = child.scale;\r\n                node.angle = child.angle;\r\n                node.setPosition(child.getPosition());\r\n                Game.addChild(node);\r\n            }\r\n            // else if (child.name == \"cactus\") {\r\n\r\n            //     let prefab = cocosz.resMgr.getRes(\"cactus\", cc.Prefab);\r\n            //     let node = cc.instantiate(prefab);\r\n            //     node.scale = child.scale;\r\n            //     node.angle = child.angle;\r\n            //     node.zIndex+=100\r\n            //     node.setPosition(child.getPosition());\r\n            //     Game.addChild(node);\r\n            // }\r\n\r\n            else if (child.name == \"propMoveFloor\" || child.name == \"enemy\" || child.name == \"prop\") {\r\n                let parent = new cc.Node;\r\n                parent.name = child.name;\r\n                parent.setPosition(child.getPosition())\r\n                for (let child2 of child.children) {\r\n                    let prefab = cocosz.resMgr.getRes(child2.name, cc.Prefab);\r\n                    let node = cc.instantiate(prefab);\r\n                    if (child2.name == \"carton\") {\r\n                        parent.zIndex += 1003\r\n                    }\r\n                    // if (child2.name == \"stone\") {\r\n                    //     cc.log(\"----------------\", node);\r\n                    // }\r\n                    node.scaleX = child2.scaleX;\r\n                    node.scaleY = child2.scaleY;\r\n                    node.width = child2.width;\r\n                    node.angle = child2.angle;\r\n                    if (child2.name == \"nimiCactus\") {\r\n                        node.angle += 360 * Math.random()\r\n                    }\r\n                    if (child2.name == \"floor11\") {\r\n                        node.getChildByName(\"rocket\").scaleX = child2.getChildByName(\"rocket\").scaleX;\r\n                        // node.getChildByName(\"rocket\").x = -child2.getChildByName(\"rocket\").x;\r\n                    }\r\n                    if (child2.name == \"floor17\") {\r\n                        let floor = child2.getChildByName(\"floor\");\r\n                        node.getChildByName(\"floor\").angle = floor.angle;\r\n                        node.getChildByName(\"floor\").scaleX = floor.scaleX;\r\n                        node.getChildByName(\"floor\").scaleY = floor.scaleY;\r\n                        node.getChildByName(\"floor\").x = floor.x;\r\n                        node.getChildByName(\"floor\").y = floor.y;\r\n                        // node.getChildByName(\"rocket\").x = -child2.getChildByName(\"rocket\").x;\r\n                    }\r\n                    if (child2.name == \"floorRotetaCom\") {\r\n                        let floor = child2.getChildByName(\"floor\");\r\n                        let direction = child2.getChildByName(\"direction\");\r\n                        node.getChildByName(\"floor\").angle = floor.angle;\r\n                        node.getChildByName(\"floor\").scaleX = floor.scaleX;\r\n                        node.getChildByName(\"floor\").scaleY = floor.scaleY;\r\n\r\n\r\n                        node.getChildByName(\"direction\").angle = direction.angle;\r\n                        node.getChildByName(\"direction\").scaleX = direction.scaleX;\r\n                        node.getChildByName(\"direction\").scaleY = direction.scaleY;\r\n                    }\r\n                    node.setPosition(child2.getPosition());\r\n                    parent.addChild(node);\r\n                }\r\n                Game.addChild(parent);\r\n            }\r\n        }\r\n\r\n        cc.log(Game)\r\n        // let mapMaskPoint = map.data.getChildByName(\"mapMaskPoint\");\r\n        // if (mapMaskPoint) {\r\n        //     let component = mapMaskPoint.getComponents(cc.PhysicsPolygonCollider);\r\n        //     let list = [];\r\n        //     for (let poly of component) {\r\n        //         if (poly.points) {\r\n        //             list.push(poly.points)\r\n        //         }\r\n        //     }\r\n\r\n        //     let prefab = cocosz.resMgr.getRes(\"mapMask\", cc.Prefab)\r\n        //     let node = cc.instantiate(prefab);\r\n        //     canvas.addChild(node);\r\n        //     node.zIndex -= 999;\r\n        //     let mask: cc.Mask = node.getComponent(cc.Mask);\r\n        //     let graphics = mask._graphics;\r\n        //     let rb = node.addComponent(cc.RigidBody);\r\n        //     rb.type = cc.RigidBodyType.Static;\r\n\r\n        //     for (let point of list) {\r\n        //         let collider = node.addComponent(cc.PhysicsPolygonCollider);\r\n        //         collider.points = [].concat(point);\r\n        //         collider.apply();\r\n        //         graphics.moveTo(point[0].x, point[0].y);\r\n        //         for (let v2 of point) {\r\n        //             graphics.lineTo(v2.x, v2.y);\r\n        //         }\r\n        //         graphics.fill();\r\n        //     }\r\n        // }\r\n\r\n\r\n        // let sandMaskPoint = map.data.getChildByName(\"sandMaskPoint\");\r\n        // if (sandMaskPoint) {\r\n        //     let point = sandMaskPoint.getComponent(cc.PhysicsPolygonCollider).points;\r\n        //     let prefab = cocosz.resMgr.getRes(\"sandMask\", cc.Prefab)\r\n        //     cc.log(prefab);\r\n        //     let node = cc.instantiate(prefab);\r\n        //     canvas.addChild(node);\r\n        //     node.zIndex -= 998;\r\n        //     let script = node.getChildByName(\"node_dirty\").getComponent(\"test\");\r\n        //     script.reset(point)\r\n        //     let mask: cc.Mask = node.getComponent(cc.Mask);\r\n        //     let graphics = mask._graphics;\r\n\r\n        //     graphics.moveTo(point[0].x, point[0].y);\r\n        //     for (let v2 of point) {\r\n        //         graphics.lineTo(v2.x, v2.y);\r\n        //     }\r\n        //     graphics.fill();\r\n\r\n\r\n        // }\r\n        // let baffle = map.data.getChildByName(\"baffle\");\r\n        // if (baffle) {\r\n        //     let prefab = cocosz.resMgr.getRes(\"baffle\", cc.Prefab);\r\n        //     let node = cc.instantiate(prefab);\r\n        //     node.setPosition(baffle.getPosition());\r\n        //     canvas.addChild(node);\r\n        // }\r\n        // let role = map.data.getChildByName(\"role\");\r\n        // if (role) {\r\n        //     let node = cc.instantiate(cocosz.resMgr.getRes(\"role\", cc.Prefab));\r\n        //     node.setPosition(role.getPosition());\r\n        //     canvas.getChildByName(\"roleMag\").addChild(node);\r\n        // }\r\n    }\r\n\r\n\r\n    private _initRes() {\r\n    }\r\n\r\n}\r\n"]}