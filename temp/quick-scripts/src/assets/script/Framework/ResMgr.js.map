{"version":3,"sources":["assets\\script\\Framework\\ResMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ResMgr {\r\n\r\n\r\n    private static _inst: ResMgr;\r\n    public static get inst(): ResMgr {\r\n        if (!ResMgr._inst) {\r\n            ResMgr._inst = new ResMgr();\r\n        }\r\n        return ResMgr._inst;\r\n    }\r\n\r\n    private _prefabDict: any = {};\r\n    private _imgDic: any = {};\r\n    private _audioDic: any = {};\r\n    private _jsonDic: any = {};\r\n\r\n    public loadResArray(urls: string[], type: typeof cc.Asset, progress: Function, complete: Function) {\r\n        for (let i = 0; i < urls.length; i++) {\r\n            this.loadRes(urls[i], type, progress, complete);\r\n        }\r\n    }\r\n\r\n    public loadRes(url: string, type: typeof cc.Asset, progress: Function, complete: Function) {\r\n        cc.loader.loadRes(url, type, (completedCount: number, totalCount: number, item: any) => {\r\n            if (progress) {\r\n                progress(completedCount, totalCount, item);\r\n            }\r\n        }, (error: Error, resource: any) => {\r\n            if (type == cc.Prefab) {\r\n                this._cachPrefab(resource);\r\n            } else if (type == cc.SpriteFrame) {\r\n                this._cachTexture(resource);\r\n            } else if (type == cc.SpriteAtlas) {\r\n                this._cachSpriteAtlas(resource);\r\n            } else if (type == cc.AudioClip) {\r\n                this._cachAudioClip(resource);\r\n            } else if (type == cc.JsonAsset) {\r\n                this._cachJsonAsset(resource);\r\n            }\r\n            if (complete) {\r\n                complete(error, resource);\r\n            }\r\n        });\r\n    }\r\n\r\n    private _cachPrefab(res: any) {\r\n        if (res) {\r\n            this._prefabDict[res.name] = res;\r\n            // cc.log(`缓存 ${res.name} 成功！`);\r\n        }\r\n    }\r\n\r\n    private _cachTexture(res: any) {\r\n        if (res) {\r\n            this._imgDic[res.name] = res;\r\n            // cc.log(`缓存 ${res.name} 成功！`);\r\n        }\r\n\r\n    }\r\n\r\n    private _cachSpriteAtlas(res: cc.SpriteAtlas) {\r\n        let spframes: cc.SpriteFrame[] = res.getSpriteFrames();\r\n        for (let i = 0; i < spframes.length; i++) {\r\n            this._cachTexture(spframes[i]);\r\n        }\r\n    }\r\n\r\n    private _cachAudioClip(res: cc.AudioClip) {\r\n        if (res) {\r\n            this._audioDic[res.name] = res;\r\n            // cc.log(`缓存 ${res.name} 成功！`);\r\n        }\r\n    }\r\n\r\n    private _cachJsonAsset(res: cc.JsonAsset) {\r\n        if (res) {\r\n            this._jsonDic[res.name] = res;\r\n        }\r\n    }\r\n\r\n    public releaseRes(resList: string[]) {\r\n\r\n    }\r\n\r\n    private releaseSingleRes(res: string) {\r\n\r\n    }\r\n\r\n    public getRes(name: string, type: typeof cc.Asset) {\r\n        switch (type) {\r\n            case cc.Prefab: {\r\n                // cc.log(this._prefabDict);\r\n                if (this._prefabDict[name]) {\r\n                    return this._prefabDict[name];\r\n                }\r\n                return null;\r\n            }\r\n            case cc.SpriteFrame: {\r\n                if (this._imgDic[name]) {\r\n                    return this._imgDic[name];\r\n                }\r\n                return null;\r\n            }\r\n            case cc.AudioClip: {\r\n                if (this._audioDic[name]) {\r\n                    return this._audioDic[name];\r\n                }\r\n                return null;\r\n            }\r\n            case cc.JsonAsset: {\r\n                if (this._jsonDic[name]) {\r\n                    return this._jsonDic[name];\r\n                }\r\n                return null;\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}