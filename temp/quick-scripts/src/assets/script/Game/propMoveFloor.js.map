{"version":3,"sources":["assets\\script\\Game\\propMoveFloor.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"../Framework/CocosZ\";\r\nimport Constant, { tag } from \"../Framework/Constant\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class propMoveFloor extends cc.Component {\r\n\r\n    minDistance: number = 0;\r\n    maxDistance: number = 0;\r\n    pos: any = 0;\r\n    floor: cc.Node = null;\r\n    role: cc.Node = null;\r\n    isStop: boolean = false;\r\n\r\n    isTouch: boolean = false;\r\n\r\n\r\n    endPos: number = 0;\r\n\r\n    x: number = -9999;\r\n\r\n    y: number = -9999;\r\n\r\n    rb: cc.RigidBody = null\r\n\r\n    isFirstMove = false\r\n    onRayCast(num1, num2) {\r\n        let startPos = this.node.parent.convertToWorldSpaceAR(this.node.getPosition());\r\n        let endPos = cc.v2(startPos.x + 1000 * num1, startPos.y + 1000 * num2);\r\n        let result = cocosz.gameMgr.onRayCast(startPos, endPos);\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    onInitDistance() {\r\n        let d1 = this.node.parent.getChildByName(\"limit1\").x\r\n        let d2 = this.node.parent.getChildByName(\"limit2\").x\r\n        if (this.node.angle == 90) {\r\n\r\n            d1 = this.node.parent.getChildByName(\"limit1\").y\r\n            d2 = this.node.parent.getChildByName(\"limit2\").y\r\n        }\r\n        let rope = this.node.parent.getChildByName(\"rope\");\r\n        if (d1 > d2) {\r\n            // this.minDistance = d2 + (50 * (this.node.scaleX / 2) * (rope.scaleX / 2));\r\n            // this.maxDistance = d1 - (50 * (this.node.scaleX / 2) * (rope.scaleX / 2));\r\n            this.minDistance = d2 + 115;\r\n            this.maxDistance = d1 - 115;\r\n            if (this.node.scale == 1.5) {\r\n\r\n                this.minDistance = d2 + 115 - 18;\r\n                this.maxDistance = d1 - 115 + 18;\r\n            }\r\n        }\r\n        else {\r\n            // this.minDistance = d1 + (50 * (this.node.scaleX / 2) * (rope.scaleX / 2));\r\n            // this.maxDistance = d2 - (50 * (this.node.scaleX / 2) * (rope.scaleX / 2));\r\n            this.minDistance = d1 + 115;\r\n            this.maxDistance = d2 - 115;\r\n            if (this.node.scale == 1.5) {\r\n                this.minDistance = d1 + 115 - 18;\r\n                this.maxDistance = d2 - 115 + 18;\r\n            }\r\n        }\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.floor = this.node.getChildByName(\"floor\");\r\n        this.rb = this.node.getComponent(cc.RigidBody);\r\n        // if (cocosz.dataMgr.CurLevelId == 79) {\r\n        //     let a = this.node.getComponent(cc.PhysicsBoxCollider);\r\n        //     a.friction = 200;\r\n        //     a.apply();\r\n        // }\r\n    }\r\n\r\n\r\n    // onBeginContact(contact, self, other) {\r\n    //     cc.log(other.tag, self.tag)\r\n    //     if (other.tag == tag.player || other.tag == tag.rope || other.tag == tag.balloon) {\r\n    //         this.isStop = true;\r\n    //     }\r\n    // }\r\n\r\n    // onEndContact(contact, self, other) {\r\n    //     cc.log(other.tag, self.tag)\r\n    //     if (other.tag == tag.player || other.tag == tag.rope || other.tag == tag.balloon) {\r\n    //         this.isStop = false;\r\n    //     }\r\n    // }  \r\n\r\n    onCollisionEnter(other, self) {\r\n        // cc.log(\"-----------碰撞进入--\", other.tag)\r\n        if (other.tag == tag.player || other.tag == tag.rope || other.tag == tag.balloon|| other.tag == tag.balloon2) {\r\n            if (other.tag == tag.player) {\r\n                // cc.log(other.node, other.node.parent.name == \"role\", other.node.parent.parent.name == \"role\", other.node.parent.parent.parent.name == \"role\");\r\n                if (other.node.parent.name == \"role\") {\r\n                    this.role = other.node.parent.getChildByName(\"body\");\r\n                }\r\n                else if (other.node.parent.parent.name == \"role\") {\r\n                    this.role = other.node.parent.parent.getChildByName(\"body\");\r\n                }\r\n                else if (other.node.parent.parent.parent.name == \"role\") {\r\n                    this.role = other.node.parent.parent.parent.getChildByName(\"body\");\r\n                }\r\n            }\r\n            // cc.log(this.role)\r\n            this.isStop = true;\r\n        }\r\n    }\r\n    onCollisionExit(other, self) {\r\n        // cc.log(\"-----------碰撞离开--\")\r\n        if (other.tag == tag.player || other.tag == tag.rope || other.tag == tag.balloon|| other.tag == tag.balloon2) {\r\n            this.isStop = false;\r\n        }\r\n    }\r\n    start() {\r\n        if (cocosz.dataMgr.CurLevelId == 14) return;\r\n        this.onInitDistance();\r\n        this.node.on(cc.Node.EventType.TOUCH_START, (event) => {\r\n            let pos = this.node.parent.convertToNodeSpaceAR(event.getLocation());\r\n            this.pos = pos;\r\n            this.node.getChildByName(\"floor\").active = true;\r\n            this.isTouch = true;\r\n        })\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\r\n            // cc.log(\"000000000000000000\")\r\n            cc.game.emit(Constant.E_TIPS_NEXT)\r\n            let pos = this.node.parent.convertToNodeSpaceAR(event.getLocation());\r\n            if (this.node.angle == 0) {\r\n\r\n                let dis = this.pos.x - pos.x;\r\n                this.pos = pos;\r\n                let x = 0 + this.node.x;\r\n\r\n                if (x - dis <= this.maxDistance && x - dis >= this.minDistance) {\r\n                    let result = null\r\n                    if (dis < 0) {\r\n                        result = this.onRayCast(1, 0);\r\n\r\n                        // if (result) {\r\n\r\n                        //     let point = result[0].point;\r\n                        //     let pos = this.node.parent.convertToNodeSpaceAR(point);\r\n                        //     if (Math.abs(this.node.x - pos.x) < (this.node.width / 2 * 1.8)) return;\r\n                        // }\r\n                    }\r\n                    else if (dis > 0) {\r\n\r\n                        result = this.onRayCast(-1, 0);\r\n                    }\r\n\r\n                    if (result) {\r\n\r\n                        let point = result[0].point;\r\n                        let pos = this.node.parent.convertToNodeSpaceAR(point);\r\n                        if (Math.abs(this.node.x - pos.x) < (this.node.width / 2 * 1.8)) return;\r\n                    }\r\n                    if (!this.isFirstMove) {\r\n                        this.isFirstMove = true;\r\n                        cocosz.audioMgr.playMoveFloorEffect();\r\n                    }\r\n                    this.node.x = x - dis;\r\n                    // this.x = x - dis\r\n                }\r\n            }\r\n            else {\r\n\r\n                let dis = this.pos.y - pos.y;\r\n                this.pos = pos;\r\n                let y = 0 + this.node.y;\r\n                if (this.role) {\r\n                    let pos2 = this.node.convertToWorldSpaceAR(this.role.getPosition())\r\n                    let pos = this.node.parent.convertToNodeSpaceAR(pos2);\r\n                    // cc.log(this.node.x, pos.x, dis,this.node.y - pos.y);\r\n                    // if (this.isStop && this.node.y - pos.y <= 50) {\r\n                    //     if (this.node.x >= pos.x && dis > 0) {\r\n                    //         return;\r\n                    //     }\r\n                    //     if (this.node.x <= pos.x && dis < 0) {\r\n                    //         return;\r\n                    //     }\r\n                    // }\r\n                }\r\n                // cc.log(y - dis, this.maxDistance, this.minDistance)\r\n                if (y - dis <= this.maxDistance && y - dis >= this.minDistance) {\r\n                    this.node.y = y - dis;\r\n                    if (!this.isFirstMove) {\r\n                        this.isFirstMove = true;\r\n                        cocosz.audioMgr.playMoveFloorEffect();\r\n                    }\r\n                    // this.y = y - dis\r\n                }\r\n            }\r\n        })\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, (event) => {\r\n              \r\n            if(this.floor){\r\n                this.floor.active = false;\r\n            }\r\n            this.isTouch = false;\r\n            this.isFirstMove = false;\r\n        })\r\n        this.node.on(cc.Node.EventType.TOUCH_END, (event) => {  \r\n            if(this.floor){\r\n                this.floor.active = false;\r\n            }\r\n            this.isTouch = false;\r\n            this.isFirstMove = false;\r\n        })\r\n    }\r\n\r\n    update(dt) {\r\n        // if (this.isTouch) return;\r\n        // if (this.x > -999) {\r\n        //     if (this.x > this.node.x) {\r\n        //         let v = this.rb.linearVelocity;\r\n        //         v.x = 100;\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n"]}