{"version":3,"sources":["assets\\script\\Game\\propMoveFloor12.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"../Framework/CocosZ\";\r\nimport Constant, { tag } from \"../Framework/Constant\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class propMoveFloor extends cc.Component {\r\n    minDistance: number = 0;\r\n    maxDistance: number = 0;\r\n    pos: any = 0;\r\n    floor: cc.Node = null;\r\n    role: cc.Node = null;\r\n    btn: cc.Node = null;\r\n    btnSelect: cc.Node = null;\r\n    isStop: boolean = false;\r\n    isFirstMove = false;\r\n\r\n\r\n\r\n    onInitDistance() {\r\n        if (cocosz.dataMgr.CurLevelId == 5) {\r\n            this.minDistance = -158;\r\n            this.maxDistance = -70;\r\n        }\r\n        if (cocosz.dataMgr.CurLevelId == 114 || cocosz.dataMgr.CurLevelId == 115 || cocosz.dataMgr.CurLevelId == 117) {\r\n            this.minDistance = -175;\r\n            this.maxDistance = -20;\r\n        }\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.btn = this.node.getChildByName(\"btn\");\r\n        this.floor = this.node.getChildByName(\"floor\");\r\n        this.btnSelect = this.btn.getChildByName(\"btnSelect\");\r\n        cc.log(this.floor.x, this.floor.y)\r\n    }\r\n\r\n\r\n\r\n    start() {\r\n        this.onInitDistance();\r\n        this.btn.on(cc.Node.EventType.TOUCH_START, (event) => {\r\n            let pos2 = this.node.parent.convertToNodeSpaceAR(event.getLocation());\r\n            let pos = cc.v2((Math.ceil(this.node.x - pos2.x)), Math.ceil(this.node.y - pos2.y));\r\n            this.pos = pos;\r\n            this.btnSelect.active = true;\r\n        })\r\n        this.btn.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\r\n            let pos2 = this.node.parent.convertToNodeSpaceAR(event.getLocation());\r\n            let pos = cc.v2(this.node.x - pos2.x, this.node.y - pos2.y);\r\n            let hd = pos.signAngle(this.pos);\r\n            let angle = Math.ceil(hd / Math.PI * 180);\r\n            this.pos = pos;\r\n\r\n            this.btn.angle -= angle;\r\n            let dis = 0;\r\n            if (this.floor) {\r\n                dis = this.floor.y + angle * 0.1;\r\n            }\r\n\r\n            // cc.log(angle, dis, this.floor.y, \"-------------angle\");\r\n            if (angle == 0 || angle == -0) return\r\n            if (dis >= this.minDistance && dis <= this.maxDistance) {\r\n                if (this.floor) {\r\n                    this.floor.y = dis;\r\n                }\r\n            }\r\n        })\r\n        this.btn.on(cc.Node.EventType.TOUCH_CANCEL, (event) => {\r\n            this.btnSelect.active = false;\r\n        })\r\n        this.btn.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n            this.btnSelect.active = false;\r\n        })\r\n\r\n        if (cocosz.dataMgr.CurLevelId == 5) {\r\n            this.node.getChildByName(\"direction\").scaleX *= -1;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        // if (this.isTouch) return;\r\n        // if (this.x > -999) {\r\n        //     if (this.x > this.node.x) {\r\n        //         let v = this.rb.linearVelocity;\r\n        //         v.x = 100;\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n"]}