{"version":3,"sources":["assets\\script\\Game\\gameBg.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"../Framework/CocosZ\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class gameBg extends cc.Component {\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    start() {\r\n        this.node.zIndex -= 9999;\r\n\r\n        cc.log(\"---------------------背景生成\");\r\n        let d = null;\r\n        if (cocosz.sceneMgr.sceneName == \"Game\") {\r\n            d = cc.tween().sequence(\r\n                cc.tween().call(() => {\r\n                    let cNode1 = cc.instantiate(this._Cloud1);\r\n                    let cNode2 = cc.instantiate(this._Cloud2);\r\n                    this._Cloud1.parent.addChild(cNode1);\r\n                    this._Cloud1.parent.addChild(cNode2);\r\n                    cNode1.y = Math.random() * 360;\r\n                    cNode2.y = Math.random() * 360;\r\n                    if (cNode1.x < 0) {\r\n                        cNode1.x -= Math.random() * 360;\r\n                    }\r\n                    else {\r\n                        cNode1.x += Math.random() * 360;\r\n                    }\r\n\r\n                    if (cNode2.x < 0) {\r\n                        cNode2.x -= Math.random() * 360;\r\n                    }\r\n                    else {\r\n                        cNode2.x += Math.random() * 360;\r\n                    }\r\n\r\n\r\n                    let pos1 = cc.v2((2500 + Math.random() * 500) * cNode1.scaleX, 0)\r\n\r\n                    let pos2 = cc.v2((2500 + Math.random() * 500) * cNode2.scaleX, 0)\r\n\r\n                    if (Math.random() > 0.4) {\r\n                        cNode1.x *= -1;\r\n                        cNode1.scaleX *= -1;\r\n                        pos1.x *= -1;\r\n                    }\r\n\r\n                    cc.tween(cNode1)\r\n                        .by(50 + 5 * Math.random(), { position: pos1 })\r\n                        .call(() => {\r\n                            cNode1.destroy();\r\n                        })\r\n                        .start()\r\n\r\n                    cc.tween(cNode2)\r\n                        .by(50 + 5 * Math.random(), { position: pos2 })\r\n                        .call(() => {\r\n                            cNode2.destroy();\r\n                        })\r\n                        .start()\r\n                }),\r\n                cc.tween().delay(50)\r\n            )\r\n        }\r\n        else {\r\n            d = cc.tween().sequence(\r\n                cc.tween().call(() => {\r\n                    let node = cc.instantiate(this.node.getChildByName(\"sCloud\" + Math.floor(Math.random() * 7)));\r\n                    node.x = Math.random() * 500 - 250;\r\n                    this.node.addChild(node);\r\n                    cc.tween(node)\r\n                        .by(20, { position: cc.v2(0, -3000) })\r\n                        .call(() => {\r\n                            node.destroy()\r\n                        })\r\n                        .start()\r\n\r\n                }),\r\n                cc.tween().delay(7)\r\n            )\r\n            cc.tween(this.node)\r\n                .repeatForever(d)\r\n                .start()\r\n        }\r\n\r\n\r\n        cc.log(d);\r\n    }\r\n\r\n    onDestroy() {\r\n        cc.log(\"---------------------背景销毁\");\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}