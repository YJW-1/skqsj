{"version":3,"sources":["assets\\script\\Game\\propMoveFloor16.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"../Framework/CocosZ\";\r\nimport { tag } from \"../Framework/Constant\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class propMoveFloor3 extends cc.Component {\r\n\r\n    minDistance: number = 0;\r\n    maxDistance: number = 0;\r\n    pos: any = 0;\r\n    floor: cc.Node = null;\r\n    role: cc.Node = null;\r\n    btn: cc.Node = null;\r\n    rb: cc.RigidBody = null;\r\n    btnSelect: cc.Node = null;\r\n    isStop: boolean = false;\r\n    onInitDistance() {\r\n        if (cocosz.dataMgr.CurLevelId == 15) {\r\n            this.minDistance = -300;\r\n            this.maxDistance = 1;\r\n        }\r\n    }\r\n\r\n\r\n    // onBeginContact(contact, self, other) {\r\n    //     // cc.log(other.node);\r\n    //     if (other.node.name == \"node_dirty\") {\r\n\r\n    //         this.rb.angularVelocity = 0;\r\n    //     }\r\n    // }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.btn = this.node.getChildByName(\"btn\");\r\n        this.floor = this.node.getChildByName(\"wheel\");\r\n        this.rb = this.floor.getComponent(cc.RigidBody);\r\n        this.btnSelect = this.btn.getChildByName(\"btnSelect\");\r\n    }\r\n\r\n\r\n    start() {\r\n        this.onInitDistance()\r\n        // this.btn.on(cc.Node.EventType.TOUCH_START, (event:cc.Touch) => {\r\n        //     // let pos2 = this.btn.convertTouchToNodeSpaceAR(event);\r\n        //     // let pos3=this.btn.parent.convertToWorldSpaceAR(event.getLocation())\r\n        //     // let pos2 = this.btn.parent.convertToNodeSpaceAR(pos3);\r\n        //     // let pos = cc.v2((Math.ceil(this.btn.x - pos2.x)), Math.ceil(this.btn.y - pos2.y));\r\n\r\n        //     let pos2 = this.node.parent.convertToNodeSpaceAR(event.getLocation());\r\n        //     let pos = cc.v2((this.node.x - pos2.x), this.node.y - pos2.y);\r\n        //     this.pos = pos;\r\n        //     this.btnSelect.active = true;\r\n        // })\r\n        // this.btn.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\r\n\r\n        //     // let pos2 = this.btn.convertTouchToNodeSpaceAR(event);\r\n\r\n        //     // let pos3=this.btn.parent.convertToWorldSpaceAR(event.getLocation())\r\n        //     // let pos2 = this.btn.parent.convertToNodeSpaceAR(pos3);\r\n        //     // let pos = cc.v2(this.btn.x - pos2.x, this.btn.y - pos2.y);\r\n\r\n        //     let pos2 = this.node.parent.convertToNodeSpaceAR(event.getLocation());\r\n        //     let pos = cc.v2(this.node.x - pos2.x, this.node.y - pos2.y);\r\n        //     let hd = pos.signAngle(this.pos);\r\n        //     let angle = Math.ceil(hd / Math.PI * 180);\r\n\r\n        //     // cc.log(pos.x, pos.y, this.pos.x, this.pos.y,pos2.x,pos2.y,this.btn.x,this.btn.y);\r\n        //     this.pos = pos;\r\n\r\n        //     this.btn.angle -= angle;\r\n\r\n        //     if (angle == 0 || angle == -0) return;\r\n        //     let rb = this.floor.getComponent(cc.RigidBody);\r\n        //     rb.angularVelocity = 30 * angle / Math.abs(angle);\r\n        // })\r\n\r\n\r\n        this.btn.on(cc.Node.EventType.TOUCH_START, (event) => {\r\n            let pp = event.getLocation();\r\n\r\n            pp.y += 1600 * cocosz.gameMgr.touchNum;\r\n            let pos2 = this.btn.parent.convertToNodeSpaceAR(pp);\r\n            let pos = cc.v2((Math.ceil(this.btn.x - pos2.x)), Math.ceil(this.btn.y - pos2.y));\r\n            this.pos = pos;\r\n            this.btnSelect.active = true;\r\n        })\r\n        this.btn.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\r\n            let pp = event.getLocation();\r\n            pp.y += 1600 * cocosz.gameMgr.touchNum;\r\n            let pos2 = this.btn.parent.convertToNodeSpaceAR(pp);\r\n            let pos = cc.v2(this.btn.x - pos2.x, this.btn.y - pos2.y);\r\n            let hd = pos.signAngle(this.pos);\r\n            let angle = Math.ceil(hd / Math.PI * 180);\r\n            this.pos = pos;\r\n\r\n            this.btn.angle -= angle;\r\n\r\n            if (angle == 0 || angle == -0) return;\r\n            let rb = null\r\n            if (this.floor) {\r\n                rb = this.floor.getComponent(cc.RigidBody);\r\n            }\r\n\r\n            rb.angularVelocity = 30 * angle / Math.abs(angle);\r\n        })\r\n\r\n        this.btn.on(cc.Node.EventType.TOUCH_CANCEL, (event) => {\r\n            this.btnSelect.active = false;\r\n        })\r\n        this.btn.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n            this.btnSelect.active = false;\r\n        })\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}