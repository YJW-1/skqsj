{"version":3,"sources":["assets\\script\\Framework\\Msg.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAA;IAqEA,CAAC;YArEoB,GAAG;IAYN,QAAI,GAAlB,UAAmB,GAAkB;QAAlB,oBAAA,EAAA,UAAkB;QACjC,sBAAsB;QACtB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,GAAG,EAAE,GAAG;YAC7C,IAAI,CAAC,GAAG,EAAE;gBACN,IAAI,MAAI,GAAY,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACxC,IAAI,MAAI,EAAE;oBACN,KAAG,CAAC,MAAM,GAAG,IAAI,CAAC;oBAElB,KAAG,CAAC,OAAO,GAAG,KAAK,CAAC;oBACpB,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAI,EAAE,KAAK,CAAC,CAAC;oBAC7C,yEAAyE;oBACzE,MAAI,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAA;oBAC7B,MAAI,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAA;oBAChC,IAAI,KAAK,GAAa,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,MAAI,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;oBACvE,IAAI,GAAG,EAAE;wBACL,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;qBACtB;oBAKD,kBAAkB;oBAClB,iCAAiC;oBACjC,6BAA6B;oBAC7B,sBAAsB;oBACtB,0BAA0B;oBAC1B,WAAW;oBACX,MAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBACjB,gBAAgB;oBAChB,EAAE,CAAC,KAAK,CAAC,MAAI,CAAC;yBACT,EAAE,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;yBACjD,KAAK,CAAC,GAAG,CAAC;yBACV,EAAE,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;yBAC/C,IAAI,CAAC;wBACF,MAAI,CAAC,OAAO,EAAE,CAAC;wBACf,KAAG,CAAC,MAAM,GAAG,KAAK,CAAC;oBACvB,CAAC,CAAC;yBACD,KAAK,EAAE,CAAA;oBAEZ,sBAAsB;oBACtB,8CAA8C;oBAC9C,8BAA8B;oBAC9B,eAAe;iBAClB;aACJ;iBAAM;gBACH,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;QACH,WAAW;QACX,0BAA0B;QAC1B,8BAA8B;QAC9B,sCAAsC;QACtC,kCAAkC;QAClC,mBAAmB;QACnB,QAAQ;QACR,IAAI;IACR,CAAC;;IAlEc,mBAAe,GAAW,QAAQ,CAAC;IAEnC,UAAM,GAAY,KAAK,CAAC;IAExB,WAAO,GAAY,KAAK,CAAC;IAGzB,YAAQ,GAAQ,EAAE,CAAC;IATjB,GAAG;QADvB,OAAO;OACa,GAAG,CAqEvB;IAAD,UAAC;CArED,AAqEC,IAAA;kBArEoB,GAAG","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"./CocosZ\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Msg {\r\n\r\n    private static tipsPanelPrefab: string = \"ui/Tip\";\r\n\r\n    private static isShow: boolean = false;\r\n\r\n    private static isTouch: boolean = false;\r\n\r\n\r\n    private static tipsList: any = [];\r\n\r\n\r\n    public static Show(msg: string = null) {\r\n        // if (!this.isShow) {\r\n        cc.loader.loadRes(this.tipsPanelPrefab, (err, res) => {\r\n            if (!err) {\r\n                let node: cc.Node = cc.instantiate(res);\r\n                if (node) {\r\n                    Msg.isShow = true;\r\n\r\n                    Msg.isTouch = false;\r\n                    cc.director.getScene().addChild(node, 10000);\r\n                    // node.position = cc.v2(cc.winSize.width / 2, cc.winSize.height / 2-50);\r\n                    node.x = cc.winSize.width / 2\r\n                    node.y = cc.winSize.height - 150\r\n                    let label: cc.Label = cc.find(\"TipLabel\", node).getComponent(cc.Label);\r\n                    if (msg) {\r\n                        label.string = msg;\r\n                    }\r\n\r\n\r\n\r\n\r\n                    // node.scale = 0;\r\n                    // cocosz.gameMgr.tweeNode(node);\r\n                    // label.scheduleOnce(() => {\r\n                    //     node.destroy();\r\n                    //     Msg.isShow = false;\r\n                    // }, 1.5);\r\n                    node.opacity = 0;\r\n                    // node.y -= 50;\r\n                    cc.tween(node)\r\n                        .by(0.5, { opacity: 255, position: cc.v2(0, 50) })\r\n                        .delay(1.5)\r\n                        .by(0.5, { opacity: 0, position: cc.v2(0, 50) })\r\n                        .call(() => {\r\n                            node.destroy();\r\n                            Msg.isShow = false;\r\n                        })\r\n                        .start()\r\n\r\n                    // node.active = true;\r\n                    // let anim = node.getComponent(cc.Animation);\r\n                    // cc.log(\"-----------\", anim)\r\n                    // anim.play();\r\n                }\r\n            } else {\r\n                cc.log(\"提示面板显示失败!\", err);\r\n            }\r\n        });\r\n        // } else {\r\n        //     if (!Msg.isTouch) {\r\n        //         Msg.isTouch = true;\r\n        //         cocosz.scheduleOnce(() => {\r\n        //             Msg.isShow = false;\r\n        //         }, 1.5);\r\n        //     }\r\n        // }\r\n    }\r\n}"]}