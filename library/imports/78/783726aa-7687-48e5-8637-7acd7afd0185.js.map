{"version":3,"sources":["assets\\script\\Game\\mapMask.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAqC,2BAAY;IADjD;QAAA,qEA2CC;QAzCG,aAAO,GAAG,KAAK,CAAC;;QAwChB,iBAAiB;IACrB,CAAC;IAvCG,0BAAQ,GAAR;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC;QACnE,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAiB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;YAAvB,IAAI,IAAI,kBAAA;YACT,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;aACzB;SACJ;QAED,EAAE,CAAC,GAAG,CAAC,kCAAkC,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;QAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAM;SACT;QAAA,CAAC;QAEF,EAAE,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAA;QAC3C,IAAI,IAAI,GAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QACpD,EAAE,CAAC,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,CAAA;QAClC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAG9B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAAnB,IAAI,KAAK,aAAA;YACV,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,KAAe,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;gBAAjB,IAAI,EAAE,cAAA;gBACP,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,QAAQ,CAAC,IAAI,EAAE,CAAC;SACnB;IACL,CAAC;IAGD,wBAAwB;IAExB,eAAe;IAEf,uBAAK,GAAL;IACA,CAAC;IAvCgB,OAAO;QAD3B,OAAO;OACa,OAAO,CA0C3B;IAAD,cAAC;CA1CD,AA0CC,CA1CoC,EAAE,CAAC,SAAS,GA0ChD;kBA1CoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import { cocosz } from \"../Framework/CocosZ\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class mapMask extends cc.Component {\r\n    isFirst = false;\r\n\r\n    onEnable() {\r\n        let component = this.node.getComponents(cc.PhysicsPolygonCollider);\r\n        let list = [];\r\n        for (let poly of component) {\r\n            if (poly.points) {\r\n                list.push(poly.points)\r\n            }\r\n        }\r\n\r\n        cc.log(\"----------------------------地图启用\",this.node.y,list)\r\n        if (!this.isFirst) {\r\n            this.isFirst = true;\r\n            return\r\n        };\r\n\r\n        cc.log(\"----------------------------地图启用2\")\r\n        let mask: cc.Mask = this.node.getComponent(cc.Mask);\r\n        cc.log(mask,this.node.parent,list)\r\n        let graphics = mask._graphics;\r\n        \r\n\r\n        for (let point of list) {\r\n            graphics.moveTo(point[0].x, point[0].y);\r\n            for (let v2 of point) {\r\n                graphics.lineTo(v2.x, v2.y);\r\n            }\r\n            graphics.fill();\r\n        }\r\n    }\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}