{"version":3,"sources":["assets\\script\\ysqszc\\tt.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;AAE5E,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAsC,4BAAY;IADlD;QAAA,qEAwCC;QAtCG,OAAC,GAAiB,IAAI,CAAC;QACvB,YAAM,GAAY,KAAK,CAAA;;QAoCvB,iBAAiB;IACrB,CAAC;IAnCG,iCAAc,GAAd,UAAe,OAAO,EAAE,IAAI,EAAE,KAAK;QAAnC,iBAqBC;QApBG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QACpB,IAAI,IAAI,CAAC,MAAM;YAAE,OAAM;QACvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,YAAY,CAAC;YACd,kDAAkD;YAClD,iCAAiC;YACjC,YAAY;YACZ,6BAA6B;YAC7B,uBAAuB;YACvB,sCAAsC;YACtC,eAAe;YACf,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;YACpB,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAI,CAAC,YAAY,CAAC;gBACd,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;gBACrB,KAAK,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC,EAAE,CAAC,CAAC,CAAA;QACT,CAAC,EAAE,CAAC,CAAC,CAAA;IACT,CAAC;IAGD,wBAAwB;IAExB,yBAAM,GAAN;QACI,0DAA0D;IAC9D,CAAC;IAED,wBAAK,GAAL;IAEA,CAAC;IApCgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAuC5B;IAAD,eAAC;CAvCD,AAuCC,CAvCqC,EAAE,CAAC,SAAS,GAuCjD;kBAvCoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    a: cc.RigidBody = null;\r\n    istrue: boolean = false\r\n\r\n    onBeginContact(contact, self, other) {\r\n        cc.log(other.sensor)\r\n        if (this.istrue) return\r\n        this.a = other;\r\n        this.istrue = true;\r\n\r\n        this.scheduleOnce(() => {\r\n            // this.a = other.node.getComponent(cc.RigidBody);\r\n            // let v = this.a.linearVelocity;\r\n            // v.y = 10;\r\n            // this.a.linearVelocity = v;\r\n            // cc.tween(other.node)\r\n            //     .by(1,{position:cc.v2(0,-100)})\r\n            //     .start()\r\n            other.sensor = true;\r\n            other.apply();\r\n            this.scheduleOnce(() => {\r\n                other.sensor = false;\r\n                other.apply();\r\n            }, 1)\r\n        }, 1)\r\n    }\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        // this.a = this.node.getComponent(cc.PhysicsBoxCollider);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}